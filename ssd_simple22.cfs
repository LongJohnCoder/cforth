{block 200}
( user f18 code) reclaim 790 load | br

( softsim example reclaim) # 0 ( node) # 1342 ( load) | cr
( practical example pwm code reclaim) # 842 ( load)

{block 202}
( ga application tools)
: a-com [ 1 ] ; | *
: a-bps 921600 ;
: c-com [ 3 ] ; | *
: c-bps 921600 ;
: host 206 ; | *
: target 208 ; | , 

( modules) | *
: sram [ 264 ] ; | *
: pf [ 360 ] ; | *
: ether [ 720 ] ; | , 

( utils) | *
: streamer [ 282 ] ; | *
: loader [ 210 ] ; | , | ,

: selftest ( port) [ 708 ] load ; :var stp [0x3]
: autotest ( port) [ 712 ] load ;

{block 216}
792 load

{block 360}
( polyforth vm) reclaim | ,
( sram) sram load | ,
( serial) 38 fh 3 loads reclaim | ,
( stack) 106 node $39 org 278 load 14 fh 2 loads | ,
( coprocs) 22 fh 4 loads | ,
( bitsy) 105 node 18 fh 2 loads | ,
( coprocs) 30 fh 4 loads | ,
( flash to sram) 86 fh 2 loads reclaim | ,
( erase and burn flash) 288 load | ,
( spi speedup) 290 load | ,
( serial wires) 102 node $20 org | ,
: start @ !b start ; 1709 bin | ,
( ganglia) 44 fh load ( snorkel) 48 fh load | ,
( spi) 50 fh load

{block 362}
( - load descriptors)
: l, dup +node 100 /mod 1 and 2* swap 1 and + 1714 + 
  push 32 32 pop /part ( warm) $a9 /p ;
: ganglia nns for i -1 + n-nn l, next ; | ,

( sea of mk1) ganglia | ,
( snorkel) 207 +node 1605 /ram up /b $37 /p | ,
( sram) sram 2 + load | ,
( vm) 2 fh load | ,
( serial) 4 fh load | ,
( additional i/o) 6 fh load | ,
( md5) 792 load | ,
( clock nodes) exit | ,
517 +node 517 /ram io /b $200 /p | ,
516 +node 516 /ram left dup /a /p right /b | ,

{block 790}
host target | cr
10 node 800 load
11 node 802 load
12 node 804 load
110 node 816 load
111 node 818 load
112 node 820 load
113 node 822 load
211 node 834 load
212 node 836 load
213 node 838 load
214 node 840 load
310 node 848 load
311 node 850 load
312 node 852 load
313 node 854 load
314 node 856 load
210 node 832 load

{block 792}
: /node dup +node /ram ; | cr
10 /node $16 /p
11 /node $15 /p
12 /node $14 /p
110 /node $14 /p
111 /node $14 /p
112 /node $14 /p
113 /node $14 /p
210 /node $8 /p
211 /node $1a /p
212 /node $1a /p
213 /node $16 /p
214 /node $15 /p
310 /node $14 /p
311 /node right /p
312 /node $15 /p
313 /node $14 /p
314 /node $14 /p

{block 800}
( -) # 10 ( id 0 mem 4) 0 org | cr
0 , 0 , 0 , 0 , | br
: 1rep = $0 2 b! !b 2 b! @b = $0 ; | cr
: cadd3 = $0 0 a! !+ !+ 1 b! @b 0 b! @b . + 1rep down b! !b 2 b! @b 65535 and 1rep = $0 ; | cr
: main = $0 0 3 b! !b | cr
  19 for | cr
    3 b! @b right b! @b cadd3 3 b! !b next 3 b! @b down b! !b warm = $0 ; | cr

{block 802}
( -) # 11 ( id 1 mem 21) 0 org | cr
98 , 5 , 3 , 35 , 38 , 19 , 38 , 89 , 50 , 75 , 53 , 76 , 12 , 28 , 51 , 10 , 45 , 65 , 12 , 82 , 0 , | br
: main = $0 | cr
  0 a! 19 for | cr
    @+ left b! @b - 1 . + . + 20 b! !b 20 b! @b 20 b! @b a push | cr
    a! 0 17 for +* unext drop drop a pop a! right b! !b next warm = $0 ; | cr

{block 804}
( -) # 12 ( id 2 mem 20) 0 org | cr
41 , 90 , 50 , 19 , 76 , 48 , 24 , 35 , 26 , 7 , 47 , 59 , 82 , 86 , 18 , 39 , 84 , 45 , 53 , 10 , | br
: main = $0 | cr
  0 a! 19 for | cr
    @+ left b! !b next warm = $0 ; | cr

{block 816}
( -) # 110 ( id 8 mem 3) 0 org | cr
0 , 0 , 0 , | br
: cadd3 = $0 0 a! !+ 0 b! @b down b! @b 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then drop . + 1 b! !b 1 b! @b = $0 ; | cr
: main = $0 0 2 b! !b | cr
  19 for | cr
    2 b! @b cadd3 2 b! !b next down b! @b up b! !b 2 b! @b up b! !b warm = $0 ; | cr

{block 818}
( -) # 111 ( id 9 mem 3) 0 org | cr
0 , 0 , 0 , | br
: cadd0 = $0 0 a! !+ 0 b! @b up b! @b 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then drop . + 1 b! !b 1 b! @b = $0 ; | cr
: main = $0 0 2 b! !b | cr
  19 for | cr
    2 b! @b cadd0 2 b! !b next 2 b! @b left b! !b warm = $0 ; | cr

{block 820}
( -) # 112 ( id 10 mem 3) 0 org | cr
0 , 0 , 0 , | br
: cadd1 = $0 0 a! !+ 0 b! @b up b! @b 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then drop . + 1 b! !b 1 b! @b = $0 ; | cr
: main = $0 0 2 b! !b | cr
  19 for | cr
    2 b! @b cadd1 2 b! !b next left b! @b 2 b! @b . + right b! !b warm = $0 ; | cr

{block 822}
( -) # 113 ( id 11 mem 3) 0 org | cr
0 , 0 , 0 , | br
: cadd2 = $0 0 a! !+ 0 b! @b up b! @b 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then drop . + 1 b! !b 1 b! @b = $0 ; | cr
: main = $0 0 2 b! !b | cr
  19 for | cr
    2 b! @b cadd2 2 b! !b next right b! @b 2 b! @b . + up b! !b warm = $0 ; | cr

{block 832}
( -) # 210 ( id 16 mem 2) 0 org | cr
0 , 0 , | br
: 2rep = $0 b! !b right b! @b up b! @b . + = $0 ; | cr
: main = $0 @p [ .. start .. ] down 2rep 0 2rep 1 b! !b 1 b! @b 0 b! @b 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then drop 3 and . + 1 b! !b 0 b! @b 65535 and 0 b! !b 0 b! @b 1 b! @b warm = $0 ; | cr

{block 834}
( -) # 211 ( id 17 mem 4) 0 org | cr
0 , 0 , 0 , 0 , | br
: 4rep = $0 2 b! !b 2 b! @b = $0 ; | cr
: 3rep = $0 b! !b left b! @b right = $0 ; | cr
: cadd0 = $0 0 a! !+ !+ 1 b! @b 0 b! @b . + 4rep up b! !b 2 b! @b 65535 and 4rep = $0 ; | cr
: main = $0 0 3 b! !b | cr
  19 for | cr
    3 b! @b down b! @b cadd0 3 b! !b next 3 b! @b left 3rep 3rep b! !b warm = $0 ; | cr

{block 836}
( -) # 212 ( id 18 mem 4) 0 org | cr
0 , 0 , 0 , 0 , | br
: 6rep = $0 2 b! !b 2 b! @b = $0 ; | cr
: 5rep = $0 b! !b right b! @b left = $0 ; | cr
: cadd1 = $0 0 a! !+ !+ 1 b! @b 0 b! @b . + 6rep up b! !b 2 b! @b 65535 and 6rep = $0 ; | cr
: main = $0 0 3 b! !b | cr
  19 for | cr
    3 b! @b down b! @b cadd1 3 b! !b next left b! @b 3 b! @b . + right 5rep 5rep b! !b warm = $0 ; | cr

{block 838}
( -) # 213 ( id 19 mem 4) 0 org | cr
0 , 0 , 0 , 0 , | br
: 7rep = $0 2 b! !b 2 b! @b = $0 ; | cr
: cadd2 = $0 0 a! !+ !+ 1 b! @b 0 b! @b . + 7rep up b! !b 2 b! @b 65535 and 7rep = $0 ; | cr
: main = $0 0 3 b! !b | cr
  19 for | cr
    3 b! @b left b! @b cadd2 3 b! !b next right b! @b 3 b! @b . + right b! !b up b! @b right b! !b warm = $0 ; | cr

{block 840}
( -) # 214 ( id 20 mem 21) 0 org | cr
30 , 3 , 2 , 93 , 3 , 51 , 30 , 78 , 81 , 49 , 38 , 29 , 39 , 12 , 64 , 0 , 24 , 14 , 97 , 94 , 0 , | br
: main = $0 | cr
  0 a! 19 for | cr
    @+ down b! @b - 1 . + . + 20 b! !b 20 b! @b 20 b! @b a push | cr
    a! 0 17 for +* unext drop drop a pop a! left b! !b next warm = $0 ; | cr

{block 848}
( -) # 310 ( id 24 mem 20) 0 org | cr
14 , 50 , 95 , 67 , 54 , 81 , 93 , 74 , 83 , 19 , 71 , 69 , 65 , 55 , 38 , 62 , 10 , 67 , 49 , 20 , | br
: main = $0 down b! @b right b! !b | cr
  0 a! 19 for | cr
    @+ right b! !b next warm = $0 ; | cr

{block 850}
( -) # 311 ( id 25 mem 21) 0 org | cr
0 , 33 , 57 , 67 , 87 , 33 , 7 , 51 , 32 , 48 , 69 , 23 , 31 , 21 , 63 , 73 , 17 , 71 , 74 , 66 , 0 , | br
: start = $0 | cr
  0 a! 19 for | cr
    @+ right b! @b - 1 . + . + 20 b! !b 20 b! @b 20 b! @b a push | cr
    a! 0 17 for +* unext drop drop a pop a! down b! !b next warm = $0 ; | cr

{block 852}
( -) # 312 ( id 26 mem 21) 0 org | cr
94 , 80 , 23 , 32 , 34 , 17 , 44 , 27 , 38 , 27 , 33 , 30 , 49 , 56 , 76 , 12 , 79 , 97 , 18 , 74 , 0 , | br
: main = $0 | cr
  0 a! 19 for | cr
    @+ right b! @b - 1 . + . + 20 b! !b 20 b! @b 20 b! @b a push | cr
    a! 0 17 for +* unext drop drop a pop a! down b! !b next warm = $0 ; | cr

{block 854}
( -) # 313 ( id 27 mem 20) 0 org | cr
90 , 47 , 11 , 51 , 25 , 4 , 71 , 5 , 41 , 94 , 10 , 8 , 47 , 10 , 49 , 89 , 5 , 16 , 31 , 21 , | br
: main = $0 | cr
  0 a! 19 for | cr
    @+ right b! !b next warm = $0 ; | cr

{block 856}
( -) # 314 ( id 28 mem 20) 0 org | cr
41 , 87 , 0 , 85 , 4 , 16 , 73 , 78 , 14 , 92 , 30 , 91 , 91 , 45 , 53 , 93 , 99 , 63 , 18 , 91 , | br
: main = $0 | cr
  0 a! 19 for | cr
    @+ down b! !b next warm = $0 ; | cr


