{block 120}
( - node) # 708 ( paths)
: line ( ncd) swap push swap | indent
     begin dup , over + -next drop drop ;
: count ( nc-ncd) dup [ 100 ] mod [ 0 ] + if | cr
( horz) swap drop [ 1 ] ; ( vert) ] then drop [ 100 ] / [ 100 ] ;
: to ( nn) over negate + -if | cr
( back) negate count negate line ; | cr
( forw) ] then count line ; | br

: 0pa align create [ 708 700 to 600 0 to | cr
1 17 to 117 717 to 716 708 to -1 , ]
: 1pa align create [ 708 701 to 601 101 to | cr
102 116 to 216 716 to 715 708 to -1 , ]
: 2pa align create [ 708 717 to 617 17 to | cr
16 0 to 100 , 101 116 to 216 200 to | cr
300 316 to 416 400 to 500 516 to | cr
616 600 to 700 708 to -1 ,

{block 148}
( f18 software simulator) empty compile | , ( demo bootstream) # 1242 ( load empty) | , ( prelude) 1250 load ( boot descriptors) 1236 load | , ( engine) 1252 8 loads ( opcodes) 1268 4 loads | , ( boot loader) 1238 load | , ( display) 1276 6 loads 1248 load 1288 2 loads | , ( preserve variables) :var nmem [0x18] :var n2mem [0x18]
: nm2m [ nod2 ] @ !node [ n2mem ] @ mem ! | , | ... [ nod ] @ !node [ nmem ] @ mem ! ; :var big [0x64]
: puka ( nn-a) nn-n 2* $8000 + block ;
: code ( nn nn) puka push puka pop 64 move ; | , ( keyboard) 1292 2 loads | , ( ports and pins) 1296 2 loads | , ( interactive) 1240 load | , | ,
: /softsim 0 [ time ] ! power | , [ first ] @ 1 + if drop nm2m ; ] then # 0 [ first ] ! | , 100 [ big ] ! 1 [ gap ] ! -1 [ wind? ] ! | , [ 100 ] !node [ 0 ] mem ! [ 100 ] other | , [ 0 ] !node [ 0 ] mem ! [ 0 ] node 0 [ xo ] ! 0 [ yo ] ! !vis ; | , | , ( init and testbeds) 902 load | , ( start) /softsim ok h

{block 200}
( user f18 code) reclaim 900 load | br

( softsim example reclaim) # 0 ( node) # 1342 ( load) | cr
( practical example pwm code reclaim) # 842 ( load)

{block 202}
( ga application tools)
: a-com [ 1 ] ; | *
: a-bps 921600 ;
: c-com [ 3 ] ; | *
: c-bps 921600 ;
: host 206 ; | *
: target 208 ; | , ( modules) | *
: sram [ 264 ] ; | , ( utils) | *
: streamer [ 282 ] ; | *
: loader [ 210 ] ; | , | ,
: selftest ( port) [ 708 ] load ; :var stp [0x3]
: autotest ( port) [ 712 ] load ;

{block 900}
( fir) host | *
target | cr
0 node 30 fh load
1 node 32 fh load
2 node 34 fh load
3 node 36 fh load
4 node 38 fh load
5 node 40 fh load
6 node 42 fh load
7 node 44 fh load
8 node 46 fh load
9 node 48 fh load
100 node 50 fh load
101 node 52 fh load
102 node 54 fh load
103 node 56 fh load
104 node 58 fh load
105 node 60 fh load
106 node 62 fh load
107 node 64 fh load
108 node 66 fh load
109 node 68 fh load
200 node 70 fh load
201 node 72 fh load
202 node 74 fh load
203 node 76 fh load
204 node 78 fh load
205 node 80 fh load
206 node 82 fh load
207 node 84 fh load
208 node 86 fh load
209 node 88 fh load
300 node 90 fh load
301 node 92 fh load
302 node 94 fh load
303 node 96 fh load
304 node 98 fh load
305 node 100 fh load
306 node 102 fh load
307 node 104 fh load
308 node 106 fh load
309 node 108 fh load
400 node 110 fh load
401 node 112 fh load
402 node 114 fh load
403 node 116 fh load
404 node 118 fh load
405 node 120 fh load
406 node 122 fh load
407 node 124 fh load
408 node 126 fh load

{block 902}
( - load descriptor)
: /node ( n) dup +node /ram ; | cr
2 /node $0 /p
3 /node $22 /p
4 /node $18 /p
5 /node $15 /p
6 /node $21 /p
102 /node $21 /p
103 /node $10 /p
104 /node $2d /p
105 /node $14 /p
106 /node $19 /p
201 /node $25 /p
202 /node $1b /p
203 /node $17 /p
204 /node $2b /p
205 /node $24 /p
206 /node $2d /p
207 /node $2b /p
301 /node $20 /p
303 /node $25 /p
304 /node $1e /p
305 /node $21 /p
306 /node $20 /p
403 /node $20 /p
404 /node $2b /p
405 /node $2a /p

{block 904}
( loader template) target load loader load | cr
( using default ide paths) | cr 
( kill boots) 0 708 hook 0 -hook | cr
( setup application) 902 load | cr
( visit perimeter nodes) 0 ship panel | cr
( susp boot-) $0 $0 ( warm) $a9 /frame wos !frame

{block 934}
( -) # 2 ( mem 0) 0 org | cr
| br
: main = $0 277 a! @ 469 b! !b @ !b warm = $0 ; | cr

{block 936}
( -) # 3 ( mem 3) 0 org | cr
0 , 0 , 0 , | br
: 58rep = $0 2 b! !b @b = $0 ; | cr
: cadd = $0 over over a dup or a! !+ !+ . + 58rep 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then a! 2 b! 373 a! ! @b 65535 and 58rep = $0 ; | cr
: 59rep = $0 b! @b cadd down b! !b = $0 ; | cr
: 57rep = $0 down b! @b right 59rep = $0 ; | cr
: 56rep = $0 277 a! @ a 59rep = $0 ; | cr
: main = $0 56rep 57rep 57rep 56rep warm = $0 ; | cr

{block 938}
( -) # 4 ( mem 3) 0 org | cr
0 , 0 , 0 , | br
: 62rep = $0 2 b! !b @b = $0 ; | cr
: cadd = $0 over over a dup or a! !+ !+ . + left b! @b 3 and . + 62rep 65535 and 62rep = $0 ; | cr
: 61rep = $0 469 a! @ @ cadd right b! !b = $0 ; | cr
: 60rep = $0 61rep 61rep = $0 ; | cr
: main = $0 60rep 60rep warm = $0 ; | cr

{block 940}
( -) # 5 ( mem 4) 0 org | cr
26437 , 61389 , 39098 , 4146 , | br
: 65rep = $0 a! @+ 469 b! !b @b = $0 ; | cr
: 64rep = $0 b! 373 @b 469 a! ! 65rep = $0 ; | cr
: 63rep = $0 469 b! a! 277 @+ !b 65rep = $0 ; | cr
: sumrotate = $0 down b! @b left b! !b = $0 ; | cr
: main = $0 0 a! @+ 277 b! !b @+ 373 a! ! 2 a! @+ 373 b! !b @+ 277 b! !b | cr
  63 for | cr
    sumrotate next a a or 63rep over dup or a! !+ a 64rep 1 a! !+ a 64rep 2 a! !+ a 63rep 3 b! !b warm = $0 ; | cr

{block 942}
( -) # 6 ( mem 4) 0 org | cr
0 , 0 , 0 , 0 , | br
: 70rep = $0 277 b! a! 1 @+ !b = $0 ; | cr
: 69rep = $0 1 b! @b down b! !b = $0 ; | cr
: 68rep = $0 70rep b! @b = $0 ; | cr
: sumrotate = $0 277 a! dup dup over ! or 373 a! b! !b @ = $0 ; | cr
: 67rep = $0 68rep sumrotate 3 a! !+ a +* 68rep 3 a! @ dup +* b! !+ !+ = $0 ; | cr
: 66rep = $0 2 70rep 67rep = $0 ; | cr
: main = $0 373 b! @b 1 a! !+ @b ! | cr
  15 for | cr
    69rep 66rep next | cr
  31 for | cr
    69rep 2 67rep next | cr
  15 for | cr
    66rep next 1 a! @+ 373 b! !b @+ !b warm = $0 ; | cr

{block 954}
( -) # 102 ( mem 4) 0 org | cr
0 , 0 , 0 , 0 , | br
: 75rep = $0 325 a! b! 1 @b ! = $0 ; | cr
: 74rep = $0 1 b! @b up b! !b = $0 ; | cr
: 73rep = $0 75rep b! @b = $0 ; | cr
: sumrotate = $0 325 dup a! dup or b! !b 469 @b ! a! @ = $0 ; | cr
: 72rep = $0 73rep sumrotate 3 a! !+ a +* 73rep 3 a! @ dup +* b! !+ !+ = $0 ; | cr
: 71rep = $0 2 75rep 72rep = $0 ; | cr
: main = $0 469 b! @b 1 a! !+ @b !+ | cr
  15 for | cr
    74rep 71rep next | cr
  31 for | cr
    74rep 2 72rep next | cr
  15 for | cr
    71rep next 1 a! @+ 277 b! !b @ !b warm = $0 ; | cr

{block 956}
( -) # 103 ( mem 4) 0 org | cr
8961 , 43913 , 56574 , 21622 , | br
: 77rep = $0 277 a! b! @b ! @ = $0 ; | cr
: 76rep = $0 277 b! a! 325 @+ !b 77rep = $0 ; | cr
: sumrotate = $0 left b! @b right b! !b = $0 ; | cr
: main = $0 0 a! @+ 325 b! !b @+ 469 b! !b 2 a! @+ 469 b! !b @+ 325 a! ! | cr
  63 for | cr
    sumrotate next a a or 76rep over dup or a! !+ a 77rep 1 a! !+ a 77rep 2 a! !+ a 76rep 3 b! !b warm = $0 ; | cr

{block 958}
( -) # 104 ( mem 5) 0 org | cr
0 , 25185 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 24 , 0 , 0 , 0 , | br
: 79rep = $0 17 b! !b = $0 ; | cr
: sumrotate = $0 325 dup over b! or a! dup !b !+ @b left b! !b = $0 ; | cr
: 78rep = $0 18 b! !b | cr
  15 for | cr
    17 b! @b 1 . + b! @b sumrotate 17 b! @b 18 b! @b . + 15 and 79rep next = $0 ; | cr
: main = $0 a a or 79rep 1 78rep 1 79rep 5 78rep 5 79rep 3 78rep a a or 79rep 7 78rep warm = $0 ; | cr

{block 960}
( -) # 105 ( mem 2) 0 org | cr
0 , 0 , | br
: 81rep = $0 1 b! @b left b! !b = $0 ; | cr
: sumrotate = $0 up b! @b down b! !b = $0 ; | cr
: 80rep = $0 81rep 325 dup b! dup or a! @ !b sumrotate 1 a! @ dup +* b! !+ 373 b! @b !+ = $0 ; | cr
: main = $0 277 dup b! dup or a! @b !+ @b ! | cr
  15 for | cr
    80rep next | cr
  15 for | cr
    81rep 80rep next | cr
  31 for | cr
    80rep next 277 dup b! dup or a! @+ !b @ !b warm = $0 ; | cr

{block 962}
( -) # 106 ( mem 2) 0 org | cr
0 , 0 , | br
: 87rep = $0 down b! @b = $0 ; | cr
: 86rep = $0 left b! @b = $0 ; | cr
: 85rep = $0 87rep 87rep = $0 ; | cr
: sumrotate = $0 325 dup +* dup or a! b! dup !b !+ 87rep up b! !b = $0 ; | cr
: 84rep = $0 1 a! dup !+ sumrotate 87rep left b! !b = $0 ; | cr
: 83rep = $0 or 84rep = $0 ; | cr
: 82rep = $0 b! @b and over - and . + 84rep = $0 ; | cr
: main = $0 | cr
  15 for | cr
    85rep and 87rep 65535 or left 82rep next | cr
  15 for | cr
    86rep 87rep and 86rep 65535 or down 82rep next | cr
  15 for | cr
    85rep or 86rep 83rep next | cr
  15 for | cr
    85rep 86rep push - pop 196608 or and - 83rep next warm = $0 ; | cr

{block 972}
( -) # 201 ( mem 3) 0 org | cr
0 , 42104 , 46934 , 28891 , 52974 , 4015 , 50730 , 17939 , 38145 , 39128 , 63407 , 23473 , 55230 , 4386 , 29075 , 17294 , 2081 , 9570 , 45888 , 23121 , 51114 , 4189 , 5203 , 59009 , 64456 , 52710 , 2006 , 3463 , 5357 , 59653 , 41976 , 729 , 19594 , | br
: sumrotate = $0 373 b! dup dup or a! dup !+ !b = $0 ; | cr
: main = $0 | cr
  1 a! 31 for | cr
    @+ a push sumrotate pop a! next | cr
  31 for | cr
    down b! @b sumrotate next warm = $0 ; | cr

{block 974}
( -) # 202 ( mem 2) 0 org | cr
0 , 0 , | br
: 94rep = $0 up b! @b = $0 ; | cr
: 93rep = $0 right b! @b = $0 ; | cr
: 92rep = $0 94rep right b! !b = $0 ; | cr
: 91rep = $0 94rep 94rep = $0 ; | cr
: sumrotate = $0 469 over over dup or b! !b 373 b! a! ! @b right b! !b 92rep = $0 ; | cr
: 90rep = $0 1 a! dup !+ sumrotate 92rep = $0 ; | cr
: 89rep = $0 or 90rep = $0 ; | cr
: 88rep = $0 b! @b and over - and . + 90rep = $0 ; | cr
: main = $0 | cr
  15 for | cr
    91rep and 94rep 65535 or right 88rep next | cr
  15 for | cr
    93rep 94rep and 93rep 65535 or up 88rep next | cr
  15 for | cr
    91rep or 93rep 89rep next | cr
  15 for | cr
    91rep 93rep push - pop 196608 or and - 89rep next warm = $0 ; | cr

{block 976}
( -) # 203 ( mem 2) 0 org | cr
0 , 0 , | br
: 97rep = $0 right b! @b left b! !b = $0 ; | cr
: 96rep = $0 1 b! @b right b! !b = $0 ; | cr
: sumrotate = $0 97rep 97rep 97rep = $0 ; | cr
: 95rep = $0 96rep 373 dup b! dup or a! @ !b sumrotate 1 a! @ dup +* and !+ 469 b! @b ! = $0 ; | cr
: main = $0 a 325 b! dup or a! @b !+ @b !+ | cr
  15 for | cr
    95rep next | cr
  15 for | cr
    96rep 95rep next | cr
  31 for | cr
    95rep next 325 b! over dup or a! @+ !b @ !b warm = $0 ; | cr

{block 978}
( -) # 204 ( mem 4) 0 org | cr
0 , 0 , 0 , 0 , | br
: 99rep = $0 left b! @b = $0 ; | cr
: 98rep = $0 2 b! !b @b = $0 ; | cr
: csum = $0 over over a dup or a! !+ !+ . + 98rep 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then 2 a! b! 469 b! !b @+ 65535 and 98rep = $0 ; | cr
: sumrotate = $0 3 a! dup !+ 99rep . + 99rep . + 325 b! @b csum down b! !b 99rep down b! @b csum up b! !b = $0 ; | cr
: main = $0 | cr
  63 for | cr
    99rep sumrotate next warm = $0 ; | cr

{block 980}
( -) # 205 ( mem 4) 0 org | cr
0 , 0 , 0 , 0 , | br
: 101rep = $0 left b! @b = $0 ; | cr
: 100rep = $0 2 b! !b @b = $0 ; | cr
: csum = $0 over over a dup or a! !+ !+ . + right b! @b 3 and . + 100rep 65535 and 100rep = $0 ; | cr
: sumrotate = $0 3 a! dup !+ 101rep . + 101rep . + 101rep csum down b! !b 101rep down b! @b csum up b! !b = $0 ; | cr
: main = $0 | cr
  63 for | cr
    up b! @b sumrotate next warm = $0 ; | cr

{block 982}
( -) # 206 ( mem 3) 0 org | cr
0 , 55146 , 59591 , 9248 , 49597 , 62844 , 18311 , 43056 , 64838 , 27008 , 35652 , 65535 , 35164 , 27536 , 64920 , 42617 , 18868 , 63006 , 49216 , 9822 , 59830 , 54831 , 580 , 55457 , 59347 , 8673 , 49975 , 62677 , 17754 , 43491 , 64751 , 26479 , 36138 , | br
: 102rep = $0 up b! @b left b! !b = $0 ; | cr
: sumrotate = $0 over dup or b! !b 102rep 373 dup b! dup or a! @+ 469 a! !b @ !b 102rep = $0 ; | cr
: main = $0 | cr
  1 a! 31 for | cr
    @+ a push sumrotate pop a! next | cr
  31 for | cr
    down b! @b sumrotate next warm = $0 ; | cr

{block 984}
( -) # 207 ( mem 5) 0 org | cr
0 , 32867 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: 104rep = $0 17 b! !b = $0 ; | cr
: sumrotate = $0 469 over +* dup or b! a! dup !b ! = $0 ; | cr
: 103rep = $0 18 b! !b | cr
  15 for | cr
    17 b! @b 1 . + b! @b sumrotate 17 b! @b 18 b! @b . + 15 and 104rep next = $0 ; | cr
: main = $0 a a or 104rep 1 103rep 1 104rep 5 103rep 5 104rep 3 103rep a a or 104rep 7 103rep warm = $0 ; | cr

{block 992}
( -) # 301 ( mem 2) 0 org | cr
14658 , 63105 , 24866 , 14348 , 59972 , 53161 , 19296 , 48240 , 32454 , 10234 , 12421 , 7429 , 53305 , 39397 , 31992 , 22117 , 8772 , 65431 , 9127 , 41017 , 22979 , 52370 , 62589 , 24017 , 32335 , 59104 , 17172 , 4513 , 32386 , 62005 , 53947 , 54161 , | br
: main = $0 | cr
  0 a! 31 for | cr
    @+ down b! !b next warm = $0 ; | cr

{block 996}
( -) # 303 ( mem 3) 0 org | cr
0 , 7 , 12 , 17 , 22 , 7 , 12 , 17 , 22 , 7 , 12 , 17 , 22 , 7 , 12 , 17 , 22 , 5 , 9 , 14 , 20 , 5 , 9 , 14 , 20 , 5 , 9 , 14 , 20 , 5 , 9 , 14 , 20 , | br
: sumrotate = $0 373 b! dup dup or a! dup !+ !b = $0 ; | cr
: main = $0 | cr
  1 a! 31 for | cr
    @+ a push sumrotate pop a! next | cr
  31 for | cr
    up b! @b sumrotate next warm = $0 ; | cr

{block 998}
( -) # 304 ( mem 1) 0 org | cr
0 , | br
: 105rep = $0 325 dup b! dup or a! @ !b = $0 ; | cr
: 1if = $0 | cr
  .. -if 262128 over 2/ dup or a! @ . + ! ; ] then = $0 ; | cr
: leftrotate = $0 262127 over a dup or b! !b . + - dup right b! !b 1if 105rep 105rep = $0 ; | cr
: sumrotate = $0 277 a! @ 469 a +* b! a! ! @b leftrotate up b! @b down b! !b = $0 ; | cr
: main = $0 | cr
  63 for | cr
    sumrotate next warm = $0 ; | cr

{block 1000}
( -) # 305 ( mem 3) 0 org | cr
0 , 0 , 0 , | br
: 106rep = $0 a a or a! @+ @+ 325 b! !b !b = $0 ; | cr
: 1if = $0 | cr
  .. -if 0 a! @+ push @ pop !+ !+ 2 b! @b dup @b or b! !b ; ] then = $0 ; | cr
: leftrotate = $0 469 dup b! dup or a! !+ ! @b 1if 106rep 106rep = $0 ; | cr
: sumrotate = $0 right b! @b down b! @b leftrotate up b! @b down b! !b = $0 ; | cr
: main = $0 | cr
  63 for | cr
    sumrotate next warm = $0 ; | cr

{block 1002}
( -) # 306 ( mem 2) 0 org | cr
65530 , 34673 , 28061 , 64997 , 42174 , 19422 , 63163 , 48831 , 10395 , 60065 , 54511 , 1160 , 55764 , 59099 , 8098 , 50348 , 62505 , 17194 , 43924 , 64659 , 25947 , 36620 , 65519 , 34180 , 28584 , 65068 , 41729 , 19976 , 63315 , 48442 , 10967 , 60294 , | br
: main = $0 | cr
  0 a! 31 for | cr
    @+ down b! !b next warm = $0 ; | cr

{block 1016}
( -) # 403 ( mem 2) 0 org | cr
4 , 11 , 16 , 23 , 4 , 11 , 16 , 23 , 4 , 11 , 16 , 23 , 4 , 11 , 16 , 23 , 6 , 10 , 15 , 21 , 6 , 10 , 15 , 21 , 6 , 10 , 15 , 21 , 6 , 10 , 15 , 21 , | br
: main = $0 | cr
  0 a! 31 for | cr
    @+ up b! !b next warm = $0 ; | cr

{block 1018}
( -) # 404 ( mem 4) 0 org | cr
0 , 0 , 0 , 0 , | br
: 108rep = $0 b! !b right b! @b 3 = $0 ; | cr
: 107rep = $0 b! @b 1 b! @b | cr
  .. if -1 . + | cr
    for | cr
      2* unext dup then drop over - and . + 65535 and = $0 ; | cr
: leftrotate = $0 right b! @b 2 108rep b! !b 325 1 b! a! @ !b @ 469 b! !b @b 2 107rep a a or 108rep 107rep 469 b! dup dup !b or a! @+ = $0 ; | cr
: sumrotate = $0 leftrotate up b! !b = $0 ; | cr
: main = $0 | cr
  63 for | cr
    sumrotate next warm = $0 ; | cr

{block 1020}
( -) # 405 ( mem 4) 0 org | cr
0 , 0 , 0 , 0 , | br
: 110rep = $0 up b! @b right b! !b = $0 ; | cr
: 109rep = $0 a! @ 262127 1 a! @ . + - | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then drop right b! !b = $0 ; | cr
: leftrotate = $0 110rep 110rep 325 b! @b 2 a! !+ @b !+ 3 dup a! 935 +* b! @b !+ 109rep 2 109rep 469 a! over dup or b! @ dup !b = $0 ; | cr
: sumrotate = $0 leftrotate up b! !b = $0 ; | cr
: main = $0 | cr
  63 for | cr
    sumrotate next warm = $0 ; | cr



