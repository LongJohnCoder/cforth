{block 200}
( user f18 code) reclaim 790 load | br
( softsim test) 1070 load

{block 202}
( ga application tools)
: a-com [ 10 ] ; | *
: a-bps 921600 ;
: c-com [ 3 ] ; | *
: c-bps 921600 ;
: host 206 ; | *
: target 208 ; | , 

( modules) | *
: sram [ 264 ] ; | *
: pf [ 360 ] ; | *
: ether [ 720 ] ; | , 

( utils) | *
: streamer [ 282 ] ; | *
: loader [ 210 ] ; | , | ,

: selftest ( port) [ 708 ] load ; :var stp [0x3]
: autotest ( port) [ 712 ] load ;

{block 216}
792 load 1072 load

{block 360}
( polyforth vm) reclaim | ,
( sram) sram load | ,
( serial) 38 fh 3 loads reclaim | ,
( stack) 106 node $39 org 278 load 14 fh 2 loads | ,
( coprocs) 22 fh 4 loads | ,
( bitsy) 105 node 18 fh 2 loads | ,
( coprocs) 30 fh 4 loads | ,
( flash to sram) 86 fh 2 loads reclaim | ,
( erase and burn flash) 288 load | ,
( spi speedup) 290 load | ,
( serial wires) 102 node $20 org | ,
: start @ !b start ; 1709 bin | ,
( ganglia) 44 fh load ( snorkel) 48 fh load | ,
( spi) 50 fh load

{block 362}
( - load descriptors)
: l, dup +node 100 /mod 1 and 2* swap 1 and + 1714 + 
  push 32 32 pop /part ( main) $a9 /p ;
: ganglia nns for i -1 + n-nn l, next ; | ,

( sea of mk1) ganglia | ,
( snorkel) 207 +node 1605 /ram up /b $37 /p | ,
( sram) sram 2 + load | ,
( vm) 2 fh load | ,
( serial) 4 fh load | ,
( additional i/o) 6 fh load | ,
( md5) 792 load | ,
( clock nodes) exit | ,
517 +node 517 /ram io /b $200 /p | ,
516 +node 516 /ram left dup /a /p right /b | ,

{block 790}
host target | cr
13 node 806 load
14 node 808 load
15 node 810 load
111 node 818 load
112 node 820 load
113 node 822 load
114 node 824 load
115 node 826 load
211 node 834 load
212 node 836 load
213 node 838 load
214 node 840 load
215 node 842 load
216 node 844 load
310 node 848 load
312 node 852 load
313 node 854 load
314 node 856 load
315 node 858 load
316 node 860 load
317 node 862 load
410 node 864 load
413 node 870 load
414 node 872 load
415 node 874 load
416 node 876 load
417 node 878 load
510 node 880 load
513 node 886 load
514 node 888 load
515 node 890 load
516 node 892 load
517 node 894 load
610 node 896 load
611 node 898 load
612 node 900 load
613 node 902 load
614 node 904 load
615 node 906 load
210 node 832 load
209 node 1060 load

{block 792}
: /node dup +node /ram ; | cr
13 /node $10 /p
14 /node $9 /p
15 /node $0 /p
111 /node $0 /p
112 /node $0 /p
113 /node $1b /p
114 /node $6 /p
115 /node $0 /p
210 /node left /p
211 /node $1 /p
212 /node $0 /p
213 /node $2 /p
214 /node $0 /p
215 /node $1a /p
216 /node $17 /p
310 /node $0 /p
312 /node $0 /p
313 /node $2 /p
314 /node $7 /p
315 /node $e /p
316 /node $2d /p
317 /node $6 /p
410 /node $0 /p
413 /node $2 /p
414 /node $3 /p
415 /node $2e /p
416 /node $1e /p
417 /node $0 /p
510 /node $0 /p
513 /node $c /p
514 /node $17 /p
515 /node $17 /p
516 /node $3 /p
517 /node $14 /p
610 /node $0 /p
611 /node $0 /p
612 /node $0 /p
613 /node $0 /p
614 /node left /p
615 /node $0 /p
209 /node left /b right /a right /p

{block 806}
( -) # 13 ( id 3 mem 0) 0 org | cr
| br
: cadd2 = $0 down b! @b 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then drop down b! !b down b! @b 65535 and down b! !b = $0 ; | cr
: main = $0 | cr
  19 for | cr
    cadd2 next main = $0 ; | cr

{block 808}
( -) # 14 ( id 4 mem 1) 0 org | cr
0 , | br
: cadd2 = $0 0 a! push !+ pop 0 b! @b over . + down b! !b drop = $0 ; | cr
: main = $0 | cr
  19 for | cr
    down b! @b right b! @b cadd2 next main = $0 ; | cr

{block 810}
( -) # 15 ( id 5 mem 0) 0 org | cr
| br
: main = $0 | cr
  19 for | cr
    down b! @b down b! @b | cr
    a! dup dup or 17 for +* unext drop drop a right b! !b next main = $0 ; | cr

{block 818}
( -) # 111 ( id 9 mem 0) 0 org | cr
| br
: main = $0 up b! @b left b! !b up b! @b left b! !b main = $0 ; | cr

{block 820}
( -) # 112 ( id 10 mem 0) 0 org | cr
| br
: main = $0 left b! @b left b! @b . + up b! !b main = $0 ; | cr

{block 822}
( -) # 113 ( id 11 mem 2) 0 org | cr
0 , 0 , | br
: cadd2 = $0 0 a! !+ 0 left b! @b push drop pop 0 b! @b over down b! !b down b! @b . + 1 b! !b dup down b! !b down b! @b push drop pop dup left b! !b 1 b! @b up b! !b drop = $0 ; | cr
: main = $0 | cr
  19 for | cr
    up b! @b cadd2 next main = $0 ; | cr

{block 824}
( -) # 114 ( id 12 mem 0) 0 org | cr
| br
: cadd2 = $0 down b! @b left b! !b left b! @b = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  19 for | cr
    dup down b! !b cadd2 push drop pop next dup up b! !b main = $0 ; | cr

{block 826}
( -) # 115 ( id 13 mem 0) 0 org | cr
| br
: main = $0 0 | cr
  19 for | cr
    up b! @b push drop pop dup down b! !b dup down b! !b next main = $0 ; | cr

{block 832}
( -) # 210 ( id 16 mem 0) 0 org | cr
| br
: /start = $0 down b! @p [ .. 904main .. ] !b right b! @b left b! !b right b! @b = $0 ; | cr

{block 834}
( -) # 211 ( id 17 mem 1) 0 org | cr
0 , | br
: main = $0 0 left b! @b push drop pop left b! @b 0 b! !b 0 b! @b up b! !b dup 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 3 and up b! !b left b! @b 0 b! !b dup 65535 and push drop pop dup right b! !b 0 b! @b right b! !b main = $0 ; | cr

{block 836}
( -) # 212 ( id 18 mem 0) 0 org | cr
| br
: main = $0 right b! @b left b! !b right b! @b left b! !b up b! @b left b! !b main = $0 ; | cr

{block 838}
( -) # 213 ( id 19 mem 0) 0 org | cr
| br
: cadd2 = $0 up b! @b = $0 ; | cr
: main = $0 | cr
  19 for | cr
    down b! @b up b! !b cadd2 down b! !b next left b! @b right b! !b down b! @b right b! !b main = $0 ; | cr

{block 840}
( -) # 214 ( id 20 mem 0) 0 org | cr
| br
: main = $0 up b! @b down b! !b down b! @b right b! @b . + left b! !b main = $0 ; | cr

{block 842}
( -) # 215 ( id 21 mem 20) 0 org | cr
41 , 87 , 0 , 85 , 4 , 16 , 73 , 78 , 14 , 92 , 30 , 91 , 91 , 45 , 53 , 93 , 99 , 63 , 18 , 91 , | br
: cadd0 = $0 down b! @b 65535 and down b! !b = $0 ; | cr
: main = $0 | cr
  19 for | cr
    cadd0 next | cr
  0 a! 19 for | cr
    left b! @b @+ - 1 . + . + up b! !b next left b! @b right b! !b main = $0 ; | cr

{block 844}
( -) # 216 ( id 22 mem 20) 0 org | cr
30 , 3 , 2 , 93 , 3 , 51 , 30 , 78 , 81 , 49 , 38 , 29 , 39 , 12 , 64 , 0 , 24 , 14 , 97 , 94 , | br
: cadd3 = $0 dup down b! !b drop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  0 a! 19 for | cr
    @+ left b! !b next | cr
  19 for | cr
    dup cadd3 down b! @b push drop pop next dup left b! !b main = $0 ; | cr

{block 848}
( -) # 310 ( id 24 mem 0) 0 org | cr
| br
: main = $0 down b! @b up b! !b main = $0 ; | cr

{block 852}
( -) # 312 ( id 26 mem 0) 0 org | cr
| br
: main = $0 right b! @b right b! @b . + right b! !b main = $0 ; | cr

{block 854}
( -) # 313 ( id 27 mem 2) 0 org | cr
0 , 0 , | br
: main = $0 0 0 push drop pop 0 0 b! !b 0 1 b! !b | cr
  19 for | cr
    dup up b! !b up b! @b push drop pop next | cr
  19 for | cr
    0 b! @b down b! !b down b! @b 0 b! !b next | cr
  19 for | cr
    1 b! @b left b! !b left b! @b 1 b! !b next left b! @b over . + right b! !b 0 b! @b right b! !b right b! @b 1 b! @b . + down b! !b main = $0 ; | cr

{block 856}
( -) # 314 ( id 28 mem 0) 0 org | cr
| br
: 1rep = $0 right b! @b left b! !b = $0 ; | cr
: cadd3 = $0 dup right b! !b drop = $0 ; | cr
: main = $0 | cr
  19 for | cr
    left b! @b cadd3 1rep next down b! @b up b! !b up b! @b down b! !b 1rep main = $0 ; | cr

{block 858}
( -) # 315 ( id 29 mem 0) 0 org | cr
| br
: cadd0 = $0 up b! @b down b! !b down b! @b up b! !b = $0 ; | cr
: cadd3 = $0 right b! @b left b! !b left b! @b = $0 ; | cr
: main = $0 | cr
  19 for | cr
    cadd0 next | cr
  19 for | cr
    cadd3 right b! !b next left b! @b right b! !b main = $0 ; | cr

{block 860}
( -) # 316 ( id 30 mem 21) 0 org | cr
0 , 98 , 5 , 3 , 35 , 38 , 19 , 38 , 89 , 50 , 75 , 53 , 76 , 12 , 28 , 51 , 10 , 45 , 65 , 12 , 82 , | br
: cadd3 = $0 0 down b! @b up b! @b . + push drop pop left b! @b over 15 for 2/ unext + 0 b! !b dup right b! !b right b! @b push drop pop dup 0 b! @b left b! !b push drop pop = $0 ; | cr
: main = $0 | cr
  1 a! 19 for | cr
    @+ up b! !b a push cadd3 pop a! down b! !b next up b! @b left b! !b main = $0 ; | cr

{block 862}
( -) # 317 ( id 31 mem 0) 0 org | cr
| br
: cadd3 = $0 right b! @b 65535 and right b! !b = $0 ; | cr
: main = $0 | cr
  19 for | cr
    cadd3 next main = $0 ; | cr

{block 864}
( -) # 410 ( id 32 mem 0) 0 org | cr
| br
: main = $0 up b! @b down b! !b main = $0 ; | cr

{block 870}
( -) # 413 ( id 35 mem 0) 0 org | cr
| br
: cadd1 = $0 down b! @b = $0 ; | cr
: main = $0 | cr
  19 for | cr
    up b! @b down b! !b cadd1 up b! !b next main = $0 ; | cr

{block 872}
( -) # 414 ( id 36 mem 1) 0 org | cr
0 , | br
: cadd0 = $0 right b! @b = $0 ; | cr
: main = $0 0 0 push drop pop 0 0 b! !b | cr
  19 for | cr
    dup right b! !b cadd0 push drop pop next | cr
  19 for | cr
    0 b! @b down b! !b down b! @b 0 b! !b next dup 0 b! @b . + up b! @b . + up b! !b main = $0 ; | cr

{block 874}
( -) # 415 ( id 37 mem 23) 0 org | cr
0 , 0 , 0 , 94 , 80 , 23 , 32 , 34 , 17 , 44 , 27 , 38 , 27 , 33 , 30 , 49 , 56 , 76 , 12 , 79 , 97 , 18 , 74 , | br
: cadd0 = $0 0 a! !+ !+ !+ 0 2 b! @b 0 b! @b . + push drop pop 1 b! @b over 15 for 2/ unext . + left b! !b dup up b! !b up b! @b push drop pop dup right b! !b drop = $0 ; | cr
: main = $0 | cr
  19 for | cr
    right b! @b left b! @b left b! @b cadd0 next | cr
  3 a! 19 for | cr
    @+ down b! !b next main = $0 ; | cr

{block 876}
( -) # 416 ( id 38 mem 20) 0 org | cr
41 , 90 , 50 , 19 , 76 , 48 , 24 , 35 , 26 , 7 , 47 , 59 , 82 , 86 , 18 , 39 , 84 , 45 , 53 , 10 , | br
: cadd0 = $0 0 left b! @b push drop pop dup push drop pop = $0 ; | cr
: cadd3 = $0 down b! @b up b! !b = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  19 for | cr
    dup left b! !b right b! @b left b! !b cadd0 push drop pop next | cr
  0 a! 19 for | cr
    up b! @b @+ - 1 . + . + down b! !b a push cadd3 pop a! next dup up b! !b main = $0 ; | cr

{block 878}
( -) # 417 ( id 39 mem 0) 0 org | cr
| br
: main = $0 0 | cr
  19 for | cr
    down b! @b push drop pop dup over | cr
    a! dup dup or 17 for +* unext drop drop a right b! !b next main = $0 ; | cr

{block 880}
( -) # 510 ( id 40 mem 0) 0 org | cr
| br
: main = $0 down b! @b up b! !b main = $0 ; | cr

{block 886}
( -) # 513 ( id 43 mem 1) 0 org | cr
0 , | br
: cadd1 = $0 0 a! !+ 0 0 b! @b left b! @b . + push drop pop dup down b! !b drop = $0 ; | cr
: main = $0 | cr
  19 for | cr
    down b! @b cadd1 next main = $0 ; | cr

{block 888}
( -) # 514 ( id 44 mem 1) 0 org | cr
0 , | br
: cadd1 = $0 0 a! !+ 0 0 b! @b right b! @b . + push drop pop dup 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ left b! !b dup up b! !b up b! @b push drop pop dup push drop pop = $0 ; | cr
: main = $0 | cr
  19 for | cr
    up b! @b right b! !b next | cr
  19 for | cr
    down b! @b cadd1 down b! !b next main = $0 ; | cr

{block 890}
( -) # 515 ( id 45 mem 20) 0 org | cr
90 , 47 , 11 , 51 , 25 , 4 , 71 , 5 , 41 , 94 , 10 , 8 , 47 , 10 , 49 , 89 , 5 , 16 , 31 , 21 , | br
: cadd1 = $0 dup right b! !b drop = $0 ; | cr
: main = $0 0 | cr
  19 for | cr
    right b! @b left b! !b next | cr
  0 a! 19 for | cr
    down b! @b @+ - 1 . + . + push drop pop dup up b! !b dup up b! !b up b! @b a push cadd1 pop a! next main = $0 ; | cr

{block 892}
( -) # 516 ( id 46 mem 0) 0 org | cr
| br
: cadd3 = $0 dup down b! !b drop = $0 ; | cr
: main = $0 0 | cr
  19 for | cr
    left b! @b right b! !b next | cr
  19 for | cr
    down b! @b push drop pop dup right b! !b dup right b! !b right b! @b cadd3 next main = $0 ; | cr

{block 894}
( -) # 517 ( id 47 mem 20) 0 org | cr
14 , 50 , 95 , 67 , 54 , 81 , 93 , 74 , 83 , 19 , 71 , 69 , 65 , 55 , 38 , 62 , 10 , 67 , 49 , 20 , | br
: main = $0 | cr
  0 a! 19 for | cr
    right b! @b @+ - 1 . + . + down b! !b next | cr
  19 for | cr
    right b! @b right b! @b | cr
    a! dup dup or 17 for +* unext drop drop a right b! !b next main = $0 ; | cr

{block 896}
( -) # 610 ( id 48 mem 0) 0 org | cr
| br
: main = $0 up b! @b right b! !b main = $0 ; | cr

{block 898}
( -) # 611 ( id 49 mem 0) 0 org | cr
| br
: main = $0 right b! @b left b! !b main = $0 ; | cr

{block 900}
( -) # 612 ( id 50 mem 0) 0 org | cr
| br
: main = $0 left b! @b right b! !b main = $0 ; | cr

{block 902}
( -) # 613 ( id 51 mem 0) 0 org | cr
| br
: main = $0 right b! @b left b! !b main = $0 ; | cr

{block 904}
( -) # 614 ( id 52 mem 20) 0 org | cr
0 , 33 , 57 , 67 , 87 , 33 , 7 , 51 , 32 , 48 , 69 , 23 , 31 , 21 , 63 , 73 , 17 , 71 , 74 , 66 , | br
: cadd1 = $0 up b! @b 65535 and up b! !b = $0 ; | cr
: 904main = $0 | cr
  0 a! 19 for | cr
    @+ up b! !b next | cr
  19 for | cr
    cadd1 next = $0 ; | cr

{block 906}
( -) # 615 ( id 53 mem 0) 0 org | cr
| br
: main = $0 | cr
  19 for | cr
    up b! @b up b! @b | cr
    a! dup dup or 17 for +* unext drop drop a up b! !b next main = $0 ; | cr

{block 1060}
( snorkel interface 209 )
0 org | cr
: start 3 for @p !b [ .. /start .. ] @b next ! ;

{block 1070}
( softsim  ) 208 node 0 org | cr
: main = $0 right b! @p [ .. start .. ] !b @b warm = $0 ;

{block 1072}
( softsim test config) | cr
208 +node 208 /ram $0 /p

