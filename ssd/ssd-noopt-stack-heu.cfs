{block 200}
( user f18 code) reclaim 790 load | br
( softsim test) 1070 load

{block 202}
( ga application tools)
: a-com [ 10 ] ; | *
: a-bps 921600 ;
: c-com [ 3 ] ; | *
: c-bps 921600 ;
: host 206 ; | *
: target 208 ; | , 

( modules) | *
: sram [ 264 ] ; | *
: pf [ 360 ] ; | *
: ether [ 720 ] ; | , 

( utils) | *
: streamer [ 282 ] ; | *
: loader [ 210 ] ; | , | ,

: selftest ( port) [ 708 ] load ; :var stp [0x3]
: autotest ( port) [ 712 ] load ;

{block 216}
792 load 1072 load

{block 360}
( polyforth vm) reclaim | ,
( sram) sram load | ,
( serial) 38 fh 3 loads reclaim | ,
( stack) 106 node $39 org 278 load 14 fh 2 loads | ,
( coprocs) 22 fh 4 loads | ,
( bitsy) 105 node 18 fh 2 loads | ,
( coprocs) 30 fh 4 loads | ,
( flash to sram) 86 fh 2 loads reclaim | ,
( erase and burn flash) 288 load | ,
( spi speedup) 290 load | ,
( serial wires) 102 node $20 org | ,
: start @ !b start ; 1709 bin | ,
( ganglia) 44 fh load ( snorkel) 48 fh load | ,
( spi) 50 fh load

{block 362}
( - load descriptors)
: l, dup +node 100 /mod 1 and 2* swap 1 and + 1714 + 
  push 32 32 pop /part ( main) $a9 /p ;
: ganglia nns for i -1 + n-nn l, next ; | ,

( sea of mk1) ganglia | ,
( snorkel) 207 +node 1605 /ram up /b $37 /p | ,
( sram) sram 2 + load | ,
( vm) 2 fh load | ,
( serial) 4 fh load | ,
( additional i/o) 6 fh load | ,
( md5) 792 load | ,
( clock nodes) exit | ,
517 +node 517 /ram io /b $200 /p | ,
516 +node 516 /ram left dup /a /p right /b | ,

{block 790}
host target | cr
10 node 800 load
11 node 802 load
12 node 804 load
13 node 806 load
110 node 816 load
111 node 818 load
112 node 820 load
113 node 822 load
211 node 834 load
212 node 836 load
213 node 838 load
214 node 840 load
310 node 848 load
311 node 850 load
312 node 852 load
313 node 854 load
314 node 856 load
410 node 864 load
411 node 866 load
210 node 832 load
209 node 1060 load

{block 792}
: /node dup +node /ram ; | cr
10 /node $28 /p
11 /node $28 /p
12 /node $3 /p
13 /node $28 /p
110 /node $0 /p
111 /node $d /p
112 /node $1d /p
113 /node $28 /p
210 /node left /p
211 /node $1b /p
212 /node $3 /p
213 /node $a /p
214 /node $28 /p
310 /node down /p
311 /node $12 /p
312 /node $0 /p
313 /node $18 /p
314 /node $28 /p
410 /node $28 /p
411 /node $11 /p
209 /node left /b right /a right /p

{block 800}
( -) # 10 ( id 0 mem 40) 0 org | cr
98 , 76 , 69 , 38 , 28 , 44 , 40 , 65 , 47 , 26 , 35 , 45 , 11 , 31 , 5 , 58 , 30 , 40 , 60 , 98 , 72 , 6 , 29 , 87 , 51 , 28 , 78 , 51 , 52 , 44 , 91 , 83 , 90 , 16 , 10 , 15 , 47 , 75 , 24 , 10 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ right b! !b next main = $0 ; | cr

{block 802}
( -) # 11 ( id 1 mem 40) 0 org | cr
67 , 60 , 36 , 78 , 81 , 96 , 97 , 62 , 16 , 54 , 24 , 24 , 24 , 44 , 76 , 10 , 62 , 94 , 37 , 1 , 50 , 50 , 89 , 1 , 59 , 86 , 49 , 95 , 78 , 16 , 99 , 76 , 37 , 54 , 58 , 96 , 78 , 23 , 56 , 87 , | br
: main = $0 | cr
  0 a! 39 for | cr
    right b! @b @+ - 1 . + . + down b! !b next main = $0 ; | cr

{block 804}
( -) # 12 ( id 2 mem 0) 0 org | cr
| br
: cadd3 = $0 dup down b! !b drop = $0 ; | cr
: main = $0 0 | cr
  39 for | cr
    right b! @b push drop pop dup over | cr
    a! dup dup or 17 for +* unext drop drop a cadd3 next main = $0 ; | cr

{block 806}
( -) # 13 ( id 3 mem 40) 0 org | cr
27 , 85 , 88 , 4 , 91 , 92 , 31 , 68 , 80 , 100 , 82 , 86 , 4 , 15 , 16 , 90 , 51 , 2 , 74 , 85 , 83 , 39 , 39 , 10 , 2 , 38 , 13 , 16 , 65 , 13 , 48 , 54 , 97 , 10 , 56 , 98 , 16 , 47 , 2 , 95 , | br
: main = $0 | cr
  0 a! 39 for | cr
    down b! @b @+ - 1 . + . + right b! !b next main = $0 ; | cr

{block 816}
( -) # 110 ( id 8 mem 0) 0 org | cr
| br
: main = $0 0 right b! @b push drop pop dup 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 3 and up b! !b dup 65535 and push drop pop dup up b! !b main = $0 ; | cr

{block 818}
( -) # 111 ( id 9 mem 2) 0 org | cr
0 , 0 , | br
: cadd2 = $0 0 a! push !+ pop 0 b! @b over . + up b! !b up b! @b push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    down b! @b 1 b! !b dup 1 b! @b 1 b! @b | cr
    a! dup dup or 17 for +* unext drop drop a cadd2 push drop pop next dup left b! !b left b! @b right b! !b main = $0 ; | cr

{block 820}
( -) # 112 ( id 10 mem 4) 0 org | cr
0 , 0 , 0 , 0 , | br
: cadd3 = $0 0 a! !+ 0 0 b! @b down b! @b . + push drop pop up b! @b over 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ . + 1 b! !b dup 65535 and push drop pop dup 1 b! @b push push drop pop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup cadd3 3 b! !b push drop pop 3 b! @b up b! !b next right b! @b left b! @b . + over . + left b! !b main = $0 ; | cr

{block 822}
( -) # 113 ( id 11 mem 40) 0 org | cr
2 , 30 , 55 , 81 , 13 , 53 , 48 , 39 , 93 , 17 , 30 , 95 , 22 , 45 , 5 , 98 , 99 , 17 , 89 , 37 , 85 , 65 , 47 , 10 , 85 , 68 , 87 , 68 , 41 , 74 , 80 , 50 , 71 , 12 , 54 , 50 , 35 , 95 , 54 , 66 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ down b! !b next up b! @b right b! !b main = $0 ; | cr

{block 832}
( -) # 210 ( id 16 mem 0) 0 org | cr
| br
: /start = $0 down b! @p [ .. 310main .. ] !b up b! @b right b! !b up b! @b left b! !b right b! @b = $0 ; | cr

{block 834}
( -) # 211 ( id 17 mem 3) 0 org | cr
0 , 0 , 0 , | br
: cadd2 = $0 0 a! !+ 0 up b! @b push drop pop 0 b! @b over 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ . + 1 b! !b dup 65535 and push drop pop dup up b! !b 1 b! @b push drop pop = $0 ; | cr
: main = $0 0 0 2 b! !b | cr
  39 for | cr
    2 b! @b cadd2 2 b! !b next down b! @b left b! @b . + 2 b! @b . + left b! @b . + push drop pop dup right b! @b . + push drop pop dup right b! !b main = $0 ; | cr

{block 836}
( -) # 212 ( id 18 mem 0) 0 org | cr
| br
: cadd3 = $0 dup up b! !b drop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup cadd3 up b! @b push drop pop next right b! @b left b! !b dup left b! !b main = $0 ; | cr

{block 838}
( -) # 213 ( id 19 mem 1) 0 org | cr
0 , | br
: cadd1 = $0 0 a! !+ 0 0 b! @b down b! @b . + push drop pop dup push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup cadd1 push drop pop next down b! @b up b! !b dup right b! !b main = $0 ; | cr

{block 840}
( -) # 214 ( id 20 mem 40) 0 org | cr
26 , 49 , 82 , 57 , 29 , 2 , 40 , 11 , 9 , 33 , 15 , 90 , 50 , 77 , 11 , 38 , 87 , 26 , 20 , 48 , 75 , 27 , 16 , 93 , 66 , 93 , 33 , 17 , 62 , 74 , 85 , 28 , 22 , 51 , 71 , 11 , 54 , 5 , 88 , 6 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ down b! !b next main = $0 ; | cr

{block 848}
( -) # 310 ( id 24 mem 40) 0 org | cr
22 , 97 , 93 , 90 , 88 , 56 , 42 , 70 , 75 , 87 , 45 , 40 , 20 , 79 , 96 , 35 , 28 , 76 , 80 , 2 , 19 , 68 , 93 , 17 , 43 , 61 , 31 , 16 , 29 , 93 , 69 , 90 , 32 , 41 , 25 , 0 , 6 , 55 , 48 , 90 , | br
: 310main = $0 | cr
  0 a! 39 for | cr
    @+ up b! @b - 1 . + . + right b! !b next = $0 ; | cr

{block 850}
( -) # 311 ( id 25 mem 3) 0 org | cr
0 , 0 , 0 , | br
: cadd0 = $0 0 a! !+ !+ 0 1 b! @b 0 b! @b . + push drop pop dup up b! !b dup 65535 and push drop pop dup push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    right b! @b 2 b! !b dup 2 b! @b 2 b! @b | cr
    a! dup dup or 17 for +* unext drop drop a cadd0 push drop pop next dup left b! !b up b! @b down b! !b main = $0 ; | cr

{block 852}
( -) # 312 ( id 26 mem 0) 0 org | cr
| br
: main = $0 left b! @b right b! !b main = $0 ; | cr

{block 854}
( -) # 313 ( id 27 mem 3) 0 org | cr
0 , 0 , 0 , | br
: cadd1 = $0 0 a! !+ !+ 0 1 b! @b 0 b! @b . + push drop pop dup 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ down b! !b dup 65535 and push drop pop dup push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    left b! @b 2 b! !b dup 2 b! @b 2 b! @b | cr
    a! dup dup or 17 for +* unext drop drop a cadd1 push drop pop next right b! @b over . + down b! !b main = $0 ; | cr

{block 856}
( -) # 314 ( id 28 mem 40) 0 org | cr
95 , 18 , 44 , 29 , 3 , 29 , 21 , 71 , 80 , 48 , 56 , 10 , 57 , 16 , 67 , 92 , 96 , 87 , 8 , 58 , 34 , 18 , 76 , 83 , 78 , 46 , 13 , 75 , 1 , 37 , 24 , 67 , 100 , 35 , 7 , 32 , 62 , 4 , 68 , 20 , | br
: main = $0 | cr
  0 a! 39 for | cr
    down b! @b @+ - 1 . + . + left b! !b next main = $0 ; | cr

{block 864}
( -) # 410 ( id 32 mem 40) 0 org | cr
17 , 71 , 84 , 0 , 67 , 24 , 28 , 12 , 47 , 46 , 96 , 41 , 62 , 31 , 47 , 23 , 79 , 24 , 73 , 29 , 68 , 97 , 42 , 39 , 100 , 74 , 42 , 89 , 32 , 28 , 63 , 74 , 45 , 96 , 53 , 92 , 86 , 100 , 27 , 89 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ up b! !b next main = $0 ; | cr

{block 866}
( -) # 411 ( id 33 mem 1) 0 org | cr
0 , | br
: cadd0 = $0 0 a! !+ 0 0 b! @b up b! @b 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then drop . + push drop pop dup push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup cadd0 push drop pop next dup up b! !b main = $0 ; | cr

{block 1060}
( snorkel interface 209 )
0 org | cr
: start 3 for @p !b [ .. /start .. ] @b next ! ;

{block 1070}
( softsim  ) 208 node 0 org | cr
: main = $0 right b! @p [ .. start .. ] !b @b warm = $0 ;

{block 1072}
( softsim test config) | cr
208 +node 208 /ram $0 /p

