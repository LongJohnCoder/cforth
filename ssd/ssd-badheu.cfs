{block 200}
( user f18 code) reclaim 790 load | br
( softsim test) 1070 load

{block 202}
( ga application tools)
: a-com [ 10 ] ; | *
: a-bps 921600 ;
: c-com [ 3 ] ; | *
: c-bps 921600 ;
: host 206 ; | *
: target 208 ; | , 

( modules) | *
: sram [ 264 ] ; | *
: pf [ 360 ] ; | *
: ether [ 720 ] ; | , 

( utils) | *
: streamer [ 282 ] ; | *
: loader [ 210 ] ; | , | ,

: selftest ( port) [ 708 ] load ; :var stp [0x3]
: autotest ( port) [ 712 ] load ;

{block 216}
792 load 1072 load

{block 360}
( polyforth vm) reclaim | ,
( sram) sram load | ,
( serial) 38 fh 3 loads reclaim | ,
( stack) 106 node $39 org 278 load 14 fh 2 loads | ,
( coprocs) 22 fh 4 loads | ,
( bitsy) 105 node 18 fh 2 loads | ,
( coprocs) 30 fh 4 loads | ,
( flash to sram) 86 fh 2 loads reclaim | ,
( erase and burn flash) 288 load | ,
( spi speedup) 290 load | ,
( serial wires) 102 node $20 org | ,
: start @ !b start ; 1709 bin | ,
( ganglia) 44 fh load ( snorkel) 48 fh load | ,
( spi) 50 fh load

{block 362}
( - load descriptors)
: l, dup +node 100 /mod 1 and 2* swap 1 and + 1714 + 
  push 32 32 pop /part ( main) $a9 /p ;
: ganglia nns for i -1 + n-nn l, next ; | ,

( sea of mk1) ganglia | ,
( snorkel) 207 +node 1605 /ram up /b $37 /p | ,
( sram) sram 2 + load | ,
( vm) 2 fh load | ,
( serial) 4 fh load | ,
( additional i/o) 6 fh load | ,
( md5) 792 load | ,
( clock nodes) exit | ,
517 +node 517 /ram io /b $200 /p | ,
516 +node 516 /ram left dup /a /p right /b | ,

{block 790}
host target | cr
14 node 808 load
110 node 816 load
111 node 818 load
112 node 820 load
113 node 822 load
114 node 824 load
115 node 826 load
116 node 828 load
210 node 832 load
211 node 834 load
212 node 836 load
213 node 838 load
214 node 840 load
215 node 842 load
216 node 844 load
312 node 852 load
313 node 854 load
314 node 856 load
316 node 860 load
317 node 862 load
412 node 868 load
413 node 870 load
414 node 872 load
415 node 874 load
416 node 876 load
513 node 886 load
514 node 888 load
515 node 812 load
613 node 810 load
614 node 806 load
615 node 804 load
616 node 802 load
715 node 800 load
209 node 1060 load

{block 792}
: /node dup +node /ram ; | cr
14 /node $28 /p
110 /node $0 /p
111 /node $0 /p
112 /node $0 /p
113 /node right /p
114 /node $7 /p
115 /node $10 /p
116 /node $6 /p
210 /node left /p
211 /node $0 /p
212 /node $0 /p
213 /node $0 /p
214 /node $10 /p
215 /node $4 /p
216 /node $28 /p
312 /node $28 /p
313 /node $3 /p
314 /node $28 /p
316 /node $0 /p
317 /node $28 /p
412 /node $6 /p
413 /node $1b /p
414 /node $0 /p
415 /node $b /p
416 /node $11 /p
513 /node $6 /p
514 /node $2 /p
515 /node $a /p
613 /node $6 /p
614 /node $1f /p
615 /node $5 /p
616 /node $28 /p
715 /node $28 /p
209 /node left /b right /a right /p

{block 808}
( -) # 14 ( id 4 mem 40) 0 org | cr
17 , 71 , 84 , 0 , 67 , 24 , 28 , 12 , 47 , 46 , 96 , 41 , 62 , 31 , 47 , 23 , 79 , 24 , 73 , 29 , 68 , 97 , 42 , 39 , 100 , 74 , 42 , 89 , 32 , 28 , 63 , 74 , 45 , 96 , 53 , 92 , 86 , 100 , 27 , 89 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ down b! !b next main = $0 ; | cr

{block 816}
( -) # 110 ( id 8 mem 0) 0 org | cr
| br
: main = $0 up b! @b right b! !b main = $0 ; | cr

{block 818}
( -) # 111 ( id 9 mem 0) 0 org | cr
| br
: main = $0 right b! @b left b! !b main = $0 ; | cr

{block 820}
( -) # 112 ( id 10 mem 0) 0 org | cr
| br
: main = $0 left b! @b right b! !b up b! @b right b! !b main = $0 ; | cr

{block 822}
( -) # 113 ( id 11 mem 40) 0 org | cr
22 , 97 , 93 , 90 , 88 , 56 , 42 , 70 , 75 , 87 , 45 , 40 , 20 , 79 , 96 , 35 , 28 , 76 , 80 , 2 , 19 , 68 , 93 , 17 , 43 , 61 , 31 , 16 , 29 , 93 , 69 , 90 , 32 , 41 , 25 , 0 , 6 , 55 , 48 , 90 , | br
: 113main = $0 | cr
  0 a! 39 for | cr
    @+ left b! !b next right b! @b left b! !b = $0 ; | cr

{block 824}
( -) # 114 ( id 12 mem 0) 0 org | cr
| br
: cadd0 = $0 0 up b! @b push drop pop dup up b! !b drop = $0 ; | cr
: main = $0 0 | cr
  39 for | cr
    left b! @b down b! @b - 1 . + . + right b! !b cadd0 next up b! @b push drop pop dup left b! @b . + push drop pop dup up b! !b main = $0 ; | cr

{block 826}
( -) # 115 ( id 13 mem 1) 0 org | cr
0 , | br
: cadd0 = $0 0 a! !+ 0 left b! @b 0 b! @b . + push drop pop dup up b! !b dup 65535 and push drop pop dup left b! !b drop = $0 ; | cr
: main = $0 0 | cr
  39 for | cr
    right b! @b push drop pop dup over | cr
    a! dup dup or 17 for +* unext drop drop a cadd0 next main = $0 ; | cr

{block 828}
( -) # 116 ( id 14 mem 0) 0 org | cr
| br
: cadd0 = $0 dup left b! !b left b! @b push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup cadd0 push drop pop next dup up b! !b main = $0 ; | cr

{block 832}
( -) # 210 ( id 16 mem 0) 0 org | cr
| br
: /start = $0 up b! @p [ .. 113main .. ] !b right b! @b left b! !b right b! @b = $0 ; | cr

{block 834}
( -) # 211 ( id 17 mem 0) 0 org | cr
| br
: main = $0 left b! @b right b! !b left b! @b right b! !b main = $0 ; | cr

{block 836}
( -) # 212 ( id 18 mem 0) 0 org | cr
| br
: main = $0 0 down b! @b push drop pop dup 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 3 and up b! !b dup 65535 and push drop pop dup left b! !b right b! @b left b! !b main = $0 ; | cr

{block 838}
( -) # 213 ( id 19 mem 0) 0 org | cr
| br
: main = $0 left b! @b right b! !b main = $0 ; | cr

{block 840}
( -) # 214 ( id 20 mem 0) 0 org | cr
| br
: 1rep = $0 up b! !b up b! @b = $0 ; | cr
: cadd0 = $0 dup right b! @b 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then drop . + 1rep push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup cadd0 push drop pop next dup down b! !b down b! @b 1rep left b! !b main = $0 ; | cr

{block 842}
( -) # 215 ( id 21 mem 0) 0 org | cr
| br
: cadd0 = $0 up b! @b right b! !b = $0 ; | cr
: main = $0 | cr
  39 for | cr
    cadd0 next main = $0 ; | cr

{block 844}
( -) # 216 ( id 22 mem 40) 0 org | cr
26 , 49 , 82 , 57 , 29 , 2 , 40 , 11 , 9 , 33 , 15 , 90 , 50 , 77 , 11 , 38 , 87 , 26 , 20 , 48 , 75 , 27 , 16 , 93 , 66 , 93 , 33 , 17 , 62 , 74 , 85 , 28 , 22 , 51 , 71 , 11 , 54 , 5 , 88 , 6 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ down b! !b next up b! @b down b! !b main = $0 ; | cr

{block 852}
( -) # 312 ( id 26 mem 40) 0 org | cr
27 , 85 , 88 , 4 , 91 , 92 , 31 , 68 , 80 , 100 , 82 , 86 , 4 , 15 , 16 , 90 , 51 , 2 , 74 , 85 , 83 , 39 , 39 , 10 , 2 , 38 , 13 , 16 , 65 , 13 , 48 , 54 , 97 , 10 , 56 , 98 , 16 , 47 , 2 , 95 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ right b! !b next up b! @b down b! !b main = $0 ; | cr

{block 854}
( -) # 313 ( id 27 mem 0) 0 org | cr
| br
: cadd3 = $0 dup up b! !b drop = $0 ; | cr
: main = $0 0 | cr
  39 for | cr
    left b! @b right b! @b - 1 . + . + push drop pop dup over | cr
    a! dup dup or 17 for +* unext drop drop a cadd3 next main = $0 ; | cr

{block 856}
( -) # 314 ( id 28 mem 40) 0 org | cr
2 , 30 , 55 , 81 , 13 , 53 , 48 , 39 , 93 , 17 , 30 , 95 , 22 , 45 , 5 , 98 , 99 , 17 , 89 , 37 , 85 , 65 , 47 , 10 , 85 , 68 , 87 , 68 , 41 , 74 , 80 , 50 , 71 , 12 , 54 , 50 , 35 , 95 , 54 , 66 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ left b! !b next down b! @b up b! !b up b! @b down b! !b main = $0 ; | cr

{block 860}
( -) # 316 ( id 30 mem 0) 0 org | cr
| br
: main = $0 0 | cr
  39 for | cr
    down b! @b right b! @b - 1 . + . + push drop pop dup over | cr
    a! dup dup or 17 for +* unext drop drop a up b! !b next down b! @b up b! !b main = $0 ; | cr

{block 862}
( -) # 317 ( id 31 mem 40) 0 org | cr
95 , 18 , 44 , 29 , 3 , 29 , 21 , 71 , 80 , 48 , 56 , 10 , 57 , 16 , 67 , 92 , 96 , 87 , 8 , 58 , 34 , 18 , 76 , 83 , 78 , 46 , 13 , 75 , 1 , 37 , 24 , 67 , 100 , 35 , 7 , 32 , 62 , 4 , 68 , 20 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ right b! !b next main = $0 ; | cr

{block 868}
( -) # 412 ( id 34 mem 0) 0 org | cr
| br
: cadd3 = $0 dup right b! !b right b! @b push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup cadd3 push drop pop next right b! @b right b! @b . + over . + up b! !b main = $0 ; | cr

{block 870}
( -) # 413 ( id 35 mem 1) 0 org | cr
0 , | br
: cadd3 = $0 0 right b! @b up b! @b . + push drop pop down b! @b over 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ . + 0 b! !b dup 65535 and push drop pop dup right b! !b 0 b! @b down b! !b drop = $0 ; | cr
: main = $0 | cr
  39 for | cr
    cadd3 next left b! @b right b! !b down b! @b right b! !b main = $0 ; | cr

{block 872}
( -) # 414 ( id 36 mem 0) 0 org | cr
| br
: main = $0 right b! @b left b! !b up b! @b down b! !b down b! @b up b! !b main = $0 ; | cr

{block 874}
( -) # 415 ( id 37 mem 0) 0 org | cr
| br
: cadd1 = $0 left b! @b 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then drop down b! !b = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup left b! !b cadd1 left b! @b push drop pop next left b! @b over . + right b! !b main = $0 ; | cr

{block 876}
( -) # 416 ( id 38 mem 2) 0 org | cr
0 , 0 , | br
: cadd1 = $0 0 a! !+ !+ 0 1 b! @b 0 b! @b . + push drop pop dup left b! !b dup 65535 and push drop pop dup push drop pop = $0 ; | cr
: main = $0 | cr
  39 for | cr
    left b! @b up b! @b cadd1 left b! !b next up b! @b left b! !b main = $0 ; | cr

{block 886}
( -) # 513 ( id 43 mem 0) 0 org | cr
| br
: cadd3 = $0 dup down b! !b down b! @b push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup cadd3 push drop pop next up b! @b down b! !b dup left b! !b main = $0 ; | cr

{block 888}
( -) # 514 ( id 44 mem 0) 0 org | cr
| br
: cadd2 = $0 up b! @b = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup up b! !b cadd2 push drop pop next down b! @b right b! @b . + over . + left b! @b . + down b! !b main = $0 ; | cr

{block 812}
( -) # 515 ( id 45 mem 1) 0 org | cr
0 , | br
: cadd1 = $0 0 a! !+ 0 0 b! @b down b! @b . + push drop pop dup push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup cadd1 push drop pop next dup right b! !b main = $0 ; | cr

{block 810}
( -) # 613 ( id 51 mem 0) 0 org | cr
| br
: cadd2 = $0 dup left b! !b left b! @b push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup cadd2 push drop pop next dup up b! !b main = $0 ; | cr

{block 806}
( -) # 614 ( id 52 mem 2) 0 org | cr
0 , 0 , | br
: cadd2 = $0 0 a! !+ 0 left b! @b right b! !b right b! @b push drop pop 0 b! @b over 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ . + 1 b! !b dup 65535 and push drop pop dup left b! !b 1 b! @b up b! !b drop = $0 ; | cr
: main = $0 | cr
  39 for | cr
    up b! @b cadd2 next main = $0 ; | cr

{block 804}
( -) # 615 ( id 53 mem 0) 0 org | cr
| br
: cadd2 = $0 right b! @b over . + right b! !b drop = $0 ; | cr
: main = $0 0 | cr
  39 for | cr
    left b! @b down b! @b - 1 . + . + push drop pop dup over | cr
    a! dup dup or 17 for +* unext drop drop a cadd2 next main = $0 ; | cr

{block 802}
( -) # 616 ( id 54 mem 40) 0 org | cr
98 , 76 , 69 , 38 , 28 , 44 , 40 , 65 , 47 , 26 , 35 , 45 , 11 , 31 , 5 , 58 , 30 , 40 , 60 , 98 , 72 , 6 , 29 , 87 , 51 , 28 , 78 , 51 , 52 , 44 , 91 , 83 , 90 , 16 , 10 , 15 , 47 , 75 , 24 , 10 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ left b! !b next main = $0 ; | cr

{block 800}
( -) # 715 ( id 61 mem 40) 0 org | cr
67 , 60 , 36 , 78 , 81 , 96 , 97 , 62 , 16 , 54 , 24 , 24 , 24 , 44 , 76 , 10 , 62 , 94 , 37 , 1 , 50 , 50 , 89 , 1 , 59 , 86 , 49 , 95 , 78 , 16 , 99 , 76 , 37 , 54 , 58 , 96 , 78 , 23 , 56 , 87 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ down b! !b next main = $0 ; | cr

{block 1060}
( snorkel interface 209 )
0 org | cr
: start 3 for @p !b [ .. /start .. ] @b next ! ;

{block 1070}
( softsim  ) 208 node 0 org | cr
: main = $0 right b! @p [ .. start .. ] !b @b warm = $0 ;

{block 1072}
( softsim test config) | cr
208 +node 208 /ram $0 /p
