{block 200}
( user f18 code) reclaim 790 load | br

{block 202}
( ga application tools)
: a-com [ 10 ] ; | *
: a-bps 921600 ;
: c-com [ 3 ] ; | *
: c-bps 921600 ;
: host 206 ; | *
: target 208 ; | , 

( modules) | *
: sram [ 264 ] ; | *
: pf [ 360 ] ; | *
: ether [ 720 ] ; | , 

( utils) | *
: streamer [ 282 ] ; | *
: loader [ 210 ] ; | , | ,

: selftest ( port) [ 708 ] load ; :var stp [0x3]
: autotest ( port) [ 712 ] load ;

{block 216}
792 load

{block 360}
( polyforth vm) reclaim | ,
( sram) sram load | ,
( serial) 38 fh 3 loads reclaim | ,
( stack) 106 node $39 org 278 load 14 fh 2 loads | ,
( coprocs) 22 fh 4 loads | ,
( bitsy) 105 node 18 fh 2 loads | ,
( coprocs) 30 fh 4 loads | ,
( flash to sram) 86 fh 2 loads reclaim | ,
( erase and burn flash) 288 load | ,
( spi speedup) 290 load | ,
( serial wires) 102 node $20 org | ,
: start @ !b start ; 1709 bin | ,
( ganglia) 44 fh load ( snorkel) 48 fh load | ,
( spi) 50 fh load

{block 362}
( - load descriptors)
: l, dup +node 100 /mod 1 and 2* swap 1 and + 1714 + 
  push 32 32 pop /part ( warm) $a9 /p ;
: ganglia nns for i -1 + n-nn l, next ; | ,

( sea of mk1) ganglia | ,
( snorkel) 207 +node 1605 /ram up /b $37 /p | ,
( sram) sram 2 + load | ,
( vm) 2 fh load | ,
( serial) 4 fh load | ,
( additional i/o) 6 fh load | ,
( md5) 792 load | ,
( clock nodes) exit | ,
517 +node 517 /ram io /b $200 /p | ,
516 +node 516 /ram left dup /a /p right /b | ,

{block 790}
host target | cr
10 node 800 load
11 node 802 load
12 node 804 load
13 node 806 load
14 node 808 load
15 node 810 load
16 node 812 load
110 node 816 load
112 node 820 load
113 node 822 load
114 node 824 load
115 node 826 load
210 node 832 load
211 node 834 load
212 node 836 load
213 node 838 load
310 node 848 load
311 node 850 load

{block 792}
: /node dup +node /ram ; | cr
10 /node $0 /p
11 /node $0 /p
12 /node $0 /p
13 /node $0 /p
14 /node $0 /p
15 /node $0 /p
16 /node $0 /p
110 /node $0 /p
112 /node $0 /p
113 /node $0 /p
114 /node $0 /p
115 /node $0 /p
210 /node $0 /p
211 /node $0 /p
212 /node $0 /p
213 /node $0 /p
310 /node $0 /p
311 /node $0 /p

{block 800}
( -) # 10 ( id 0 mem 40) 0 org | cr
22 , 97 , 93 , 90 , 88 , 56 , 42 , 70 , 75 , 87 , 45 , 40 , 20 , 79 , 96 , 35 , 28 , 76 , 80 , 2 , 19 , 68 , 93 , 17 , 43 , 61 , 31 , 16 , 29 , 93 , 69 , 90 , 32 , 41 , 25 , 0 , 6 , 55 , 48 , 90 , | br
: main = $0 down b! @b 0 b! !b | cr
  0 a! 39 for | cr
    @+ right b! !b next warm = $0 ; | cr

{block 802}
( -) # 11 ( id 1 mem 40) 0 org | cr
17 , 71 , 84 , 0 , 67 , 24 , 28 , 12 , 47 , 46 , 96 , 41 , 62 , 31 , 47 , 23 , 79 , 24 , 73 , 29 , 68 , 97 , 42 , 39 , 100 , 74 , 42 , 89 , 32 , 28 , 63 , 74 , 45 , 96 , 53 , 92 , 86 , 100 , 27 , 89 , | br
: main = $0 0 | cr
  0 a! 39 for | cr
    right b! @b @+ - 1 . + . + push drop pop dup over a push | cr
    a! dup dup or 17 for +* unext drop drop a pop a! left b! !b next warm = $0 ; | cr

{block 804}
( -) # 12 ( id 2 mem 6) 0 org | cr
0 , 0 , 0 , 0 , 0 , 0 , | br
: cadd0 = $0 0 a! !+ !+ !+ 0 2 b! @b 0 b! @b . + push drop pop 1 b! @b over 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ . + 3 b! !b dup 65535 and push drop pop dup 3 b! @b push push drop pop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    down b! @b over left b! @b cadd0 5 b! !b down b! !b 5 b! @b push drop pop next dup right b! !b warm = $0 ; | cr

{block 806}
( -) # 13 ( id 3 mem 1) 0 org | cr
0 , | br
: cadd1 = $0 0 a! !+ 0 0 b! @b left b! @b . + push drop pop dup push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup cadd1 push drop pop next right b! @b over . + down b! !b warm = $0 ; | cr

{block 808}
( -) # 14 ( id 4 mem 3) 0 org | cr
0 , 0 , 0 , | br
: cadd1 = $0 0 a! !+ !+ 0 1 b! @b 0 b! @b . + push drop pop dup 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ left b! !b dup 65535 and push drop pop dup push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    right b! @b 2 b! !b dup 2 b! @b 2 b! @b | cr
    a! dup dup or 17 for +* unext drop drop a cadd1 push drop pop next dup down b! !b warm = $0 ; | cr

{block 810}
( -) # 15 ( id 5 mem 40) 0 org | cr
26 , 49 , 82 , 57 , 29 , 2 , 40 , 11 , 9 , 33 , 15 , 90 , 50 , 77 , 11 , 38 , 87 , 26 , 20 , 48 , 75 , 27 , 16 , 93 , 66 , 93 , 33 , 17 , 62 , 74 , 85 , 28 , 22 , 51 , 71 , 11 , 54 , 5 , 88 , 6 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ left b! @b - 1 . + . + right b! !b next warm = $0 ; | cr

{block 812}
( -) # 16 ( id 6 mem 40) 0 org | cr
95 , 18 , 44 , 29 , 3 , 29 , 21 , 71 , 80 , 48 , 56 , 10 , 57 , 16 , 67 , 92 , 96 , 87 , 8 , 58 , 34 , 18 , 76 , 83 , 78 , 46 , 13 , 75 , 1 , 37 , 24 , 67 , 100 , 35 , 7 , 32 , 62 , 4 , 68 , 20 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ left b! !b next warm = $0 ; | cr

{block 816}
( -) # 110 ( id 8 mem 0) 0 org | cr
| br
: main = $0 up b! @b down b! !b warm = $0 ; | cr

{block 820}
( -) # 112 ( id 10 mem 0) 0 org | cr
| br
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup down b! !b down b! @b push drop pop next dup right b! !b warm = $0 ; | cr

{block 822}
( -) # 113 ( id 11 mem 3) 0 org | cr
0 , 0 , 0 , | br
: cadd2 = $0 0 a! !+ !+ 0 1 b! @b 0 b! @b . + push drop pop dup up b! !b dup 65535 and push drop pop dup push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    left b! @b 2 b! !b dup 2 b! @b 2 b! @b | cr
    a! dup dup or 17 for +* unext drop drop a cadd2 push drop pop next right b! @b left b! @b . + over . + up b! !b down b! @b up b! !b warm = $0 ; | cr

{block 824}
( -) # 114 ( id 12 mem 40) 0 org | cr
67 , 60 , 36 , 78 , 81 , 96 , 97 , 62 , 16 , 54 , 24 , 24 , 24 , 44 , 76 , 10 , 62 , 94 , 37 , 1 , 50 , 50 , 89 , 1 , 59 , 86 , 49 , 95 , 78 , 16 , 99 , 76 , 37 , 54 , 58 , 96 , 78 , 23 , 56 , 87 , | br
: main = $0 | cr
  0 a! 39 for | cr
    right b! @b @+ - 1 . + . + left b! !b next down b! @b left b! !b warm = $0 ; | cr

{block 826}
( -) # 115 ( id 13 mem 40) 0 org | cr
98 , 76 , 69 , 38 , 28 , 44 , 40 , 65 , 47 , 26 , 35 , 45 , 11 , 31 , 5 , 58 , 30 , 40 , 60 , 98 , 72 , 6 , 29 , 87 , 51 , 28 , 78 , 51 , 52 , 44 , 91 , 83 , 90 , 16 , 10 , 15 , 47 , 75 , 24 , 10 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ right b! !b next warm = $0 ; | cr

{block 832}
( -) # 210 ( id 16 mem 0) 0 org | cr
| br
: main = $0 0 up b! !b right b! @b right b! @b warm = $0 ; | cr

{block 834}
( -) # 211 ( id 17 mem 3) 0 org | cr
0 , 0 , 0 , | br
: 1rep = $0 left b! !b dup 65535 and = $0 ; | cr
: cadd3 = $0 0 a! !+ !+ 0 1 b! @b 0 b! @b . + push drop pop dup 1rep push drop pop dup push drop pop = $0 ; | cr
: main = $0 0 0 2 b! !b | cr
  39 for | cr
    2 b! @b down b! @b cadd3 2 b! !b next left b! @b 2 b! @b . + push drop pop dup 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 1rep push drop pop dup right b! !b left b! @b right b! !b warm = $0 ; | cr

{block 836}
( -) # 212 ( id 18 mem 1) 0 org | cr
0 , | br
: 2rep = $0 right b! @b left b! !b = $0 ; | cr
: cadd3 = $0 0 a! !+ 0 0 b! @b left b! @b 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then drop . + push drop pop dup push drop pop = $0 ; | cr
: main = $0 0 0 push drop pop | cr
  39 for | cr
    dup cadd3 push drop pop next 2rep dup right b! !b left b! @b right b! !b 2rep warm = $0 ; | cr

{block 838}
( -) # 213 ( id 19 mem 2) 0 org | cr
0 , 0 , | br
: cadd2 = $0 0 a! !+ 0 0 b! @b up b! @b 16 | cr
  .. if -1 . + | cr
    for | cr
      2/ unext dup then drop . + push drop pop dup push drop pop = $0 ; | cr
: main = $0 0 0 1 b! !b | cr
  39 for | cr
    1 b! @b cadd2 1 b! !b next up b! @b right b! !b up b! @b 1 b! @b . + right b! @b . + push drop pop dup right b! @b 3 and . + push drop pop dup right b! !b warm = $0 ; | cr

{block 848}
( -) # 310 ( id 24 mem 40) 0 org | cr
27 , 85 , 88 , 4 , 91 , 92 , 31 , 68 , 80 , 100 , 82 , 86 , 4 , 15 , 16 , 90 , 51 , 2 , 74 , 85 , 83 , 39 , 39 , 10 , 2 , 38 , 13 , 16 , 65 , 13 , 48 , 54 , 97 , 10 , 56 , 98 , 16 , 47 , 2 , 95 , | br
: main = $0 | cr
  0 a! 39 for | cr
    @+ right b! !b next warm = $0 ; | cr

{block 850}
( -) # 311 ( id 25 mem 40) 0 org | cr
2 , 30 , 55 , 81 , 13 , 53 , 48 , 39 , 93 , 17 , 30 , 95 , 22 , 45 , 5 , 98 , 99 , 17 , 89 , 37 , 85 , 65 , 47 , 10 , 85 , 68 , 87 , 68 , 41 , 74 , 80 , 50 , 71 , 12 , 54 , 50 , 35 , 95 , 54 , 66 , | br
: main = $0 0 | cr
  0 a! 39 for | cr
    @+ right b! @b - 1 . + . + push drop pop dup over a push | cr
    a! dup dup or 17 for +* unext drop drop a pop a! down b! !b next warm = $0 ; | cr

