{block 200}
( user f18 code) reclaim 790 load | br
( softsim test) 1070 load

{block 202}
( ga application tools)
: a-com [ 10 ] ; | *
: a-bps 921600 ;
: c-com [ 3 ] ; | *
: c-bps 921600 ;
: host 206 ; | *
: target 208 ; | , 

( modules) | *
: sram [ 264 ] ; | *
: pf [ 360 ] ; | *
: ether [ 720 ] ; | , 

( utils) | *
: streamer [ 282 ] ; | *
: loader [ 210 ] ; | , | ,

: selftest ( port) [ 708 ] load ; :var stp [0x3]
: autotest ( port) [ 712 ] load ;

{block 216}
792 load 1072 load

{block 360}
( polyforth vm) reclaim | ,
( sram) sram load | ,
( serial) 38 fh 3 loads reclaim | ,
( stack) 106 node $39 org 278 load 14 fh 2 loads | ,
( coprocs) 22 fh 4 loads | ,
( bitsy) 105 node 18 fh 2 loads | ,
( coprocs) 30 fh 4 loads | ,
( flash to sram) 86 fh 2 loads reclaim | ,
( erase and burn flash) 288 load | ,
( spi speedup) 290 load | ,
( serial wires) 102 node $20 org | ,
: start @ !b start ; 1709 bin | ,
( ganglia) 44 fh load ( snorkel) 48 fh load | ,
( spi) 50 fh load

{block 362}
( - load descriptors)
: l, dup +node 100 /mod 1 and 2* swap 1 and + 1714 + 
  push 32 32 pop /part ( main) $a9 /p ;
: ganglia nns for i -1 + n-nn l, next ; | ,

( sea of mk1) ganglia | ,
( snorkel) 207 +node 1605 /ram up /b $37 /p | ,
( sram) sram 2 + load | ,
( vm) 2 fh load | ,
( serial) 4 fh load | ,
( additional i/o) 6 fh load | ,
( md5) 792 load | ,
( clock nodes) exit | ,
517 +node 517 /ram io /b $200 /p | ,
516 +node 516 /ram left dup /a /p right /b | ,

{block 790}
host target | cr
110 node 816 load
111 node 818 load
112 node 820 load
211 node 834 load
310 node 848 load
311 node 850 load
312 node 852 load
410 node 864 load
411 node 866 load
412 node 868 load
413 node 870 load
510 node 880 load
511 node 882 load
512 node 884 load
210 node 832 load
209 node 1060 load

{block 792}
: /node dup +node /ram ; | cr
110 /node $a /p
111 /node $5 /p
112 /node $a /p
210 /node left /p
211 /node right /p
310 /node $5 /p
311 /node $14 /p
312 /node $5 /p
410 /node $10 /p
411 /node $0 /p
412 /node $a /p
413 /node $a /p
510 /node $0 /p
511 /node $14 /p
512 /node $5 /p
209 /node left /b right /a right /p

{block 816}
( -) # 110 ( id 8 mem 10) 0 org | cr
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: main = $a | cr
  0 a! 9 for | cr
    up b! @b !+ next 39 -30 . + b! @b up b! !b main = $0 ; | cr

{block 818}
( -) # 111 ( id 9 mem 5) 0 org | cr
1 , 1 , 1 , 1 , 1 , | br
: main = $5 0 | cr
  9 for | cr
    0 push drop pop | cr
    0 a! 4 for | cr
      dup up b! @b @+ a push | cr
      a! dup dup or 17 for +* unext drop drop a pop a! . + push drop pop next dup left b! !b next main = $0 ; | cr

{block 820}
( -) # 112 ( id 10 mem 10) 0 org | cr
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: main = $a | cr
  0 a! 9 for | cr
    left b! @b !+ next main = $0 ; | cr

{block 832}
( -) # 210 ( id 16 mem 0) 0 org | cr
| br
: /start = $0 right b! @p [ .. 211main .. ] !b | cr
  9 for | cr
    down b! @b up b! !b next up b! @b left b! !b = $0 ; | cr

{block 834}
( -) # 211 ( id 17 mem 16) 0 org | cr
7 , 5 , 2 , 3 , 7 , 0 , 4 , 2 , 8 , 7 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: 1rep = $0 14 b! @b 1 . + !b = $0 ; | cr
: 211main = $0 | cr
  0 14 b! !b 3 for | cr
    down b! @b 14 b! @b 10 . + b! !b 1rep next | cr
  0 14 b! !b 9 for | cr
    | cr
    0 15 b! !b 4 for | cr
      14 b! @b 15 b! @b . + b! @b up b! !b 15 b! @b 1 . + !b next 1rep next = $0 ; | cr

{block 848}
( -) # 310 ( id 24 mem 5) 0 org | cr
1 , 1 , 1 , 1 , 1 , | br
: main = $0 0 | cr
  9 for | cr
    0 push drop pop | cr
    0 a! 4 for | cr
      dup up b! @b @+ a push | cr
      a! dup dup or 17 for +* unext drop drop a pop a! . + push drop pop next dup down b! !b next main = $0 ; | cr

{block 850}
( -) # 311 ( id 25 mem 16) 0 org | cr
6 , 1 , 4 , 9 , 8 , 5 , 5 , 0 , 3 , 3 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: 2rep = $0 14 b! @b 1 . + !b = $0 ; | cr
: main = $0 | cr
  0 14 b! !b 3 for | cr
    14 b! @b b! @b down b! !b up b! @b 14 b! @b 10 . + b! !b 2rep next | cr
  0 14 b! !b 9 for | cr
    | cr
    0 15 b! !b 4 for | cr
      14 b! @b 15 b! @b . + b! @b left b! !b 15 b! @b 1 . + !b next 2rep next main = $0 ; | cr

{block 852}
( -) # 312 ( id 26 mem 5) 0 org | cr
1 , 1 , 1 , 1 , 1 , | br
: main = $0 0 | cr
  9 for | cr
    0 push drop pop | cr
    0 a! 4 for | cr
      dup left b! @b @+ a push | cr
      a! dup dup or 17 for +* unext drop drop a pop a! . + push drop pop next dup up b! !b next main = $0 ; | cr

{block 864}
( -) # 410 ( id 32 mem 16) 0 org | cr
5 , 1 , 3 , 6 , 9 , 5 , 9 , 8 , 2 , 9 , 10 , 2 , 8 , 8 , 0 , 0 , | br
: main = $0 | cr
  0 a! 3 for | cr
    @+ down b! !b next | cr
  0 14 b! !b 9 for | cr
    | cr
    0 15 b! !b 4 for | cr
      14 b! @b 15 b! @b . + b! @b up b! !b 15 b! @b 1 . + !b next 14 b! @b 1 . + !b next main = $0 ; | cr

{block 866}
( -) # 411 ( id 33 mem 0) 0 org | cr
| br
: main = $0 | cr
  3 for | cr
    down b! @b up b! !b next main = $0 ; | cr

{block 868}
( -) # 412 ( id 34 mem 10) 0 org | cr
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: main = $0 0 | cr
  9 for | cr
    up b! @b right b! !b next | cr
  0 a! 9 for | cr
    0 push drop pop | cr
    4 for | cr
      dup down b! @b . + push drop pop next dup !+ next main = $0 ; | cr

{block 870}
( -) # 413 ( id 35 mem 10) 0 org | cr
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: main = $0 | cr
  0 a! 9 for | cr
    right b! @b !+ next main = $0 ; | cr

{block 880}
( -) # 510 ( id 40 mem 0) 0 org | cr
| br
: main = $0 | cr
  3 for | cr
    down b! @b right b! !b next main = $0 ; | cr

{block 882}
( -) # 511 ( id 41 mem 16) 0 org | cr
5 , 4 , 1 , 3 , 1 , 0 , 1 , 0 , 9 , 4 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: 3rep = $0 14 b! @b 1 . + !b = $0 ; | cr
: main = $0 | cr
  0 14 b! !b 3 for | cr
    14 b! @b b! @b down b! !b right b! @b 14 b! @b 10 . + b! !b 3rep next | cr
  0 14 b! !b 9 for | cr
    | cr
    0 15 b! !b 4 for | cr
      14 b! @b 15 b! @b . + b! @b left b! !b 15 b! @b 1 . + !b next 3rep next main = $0 ; | cr

{block 884}
( -) # 512 ( id 42 mem 5) 0 org | cr
1 , 1 , 1 , 1 , 1 , | br
: main = $0 | cr
  9 for | cr
    | cr
    0 a! 4 for | cr
      left b! @b @+ a push | cr
      a! dup dup or 17 for +* unext drop drop a pop a! down b! !b next next main = $0 ; | cr

{block 1060}
( snorkel interface 209 )
0 org | cr
: start 3 for @p !b [ .. /start .. ] @b next ! ;

{block 1070}
( softsim  ) 208 node 0 org | cr
: main = $0 right b! @p [ .. start .. ] !b @b warm = $0 ;

{block 1072}
( softsim test config) | cr
208 +node 208 /ram $0 /p
