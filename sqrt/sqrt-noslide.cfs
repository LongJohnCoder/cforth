{block 200}
( user f18 code) reclaim 790 load | br
( softsim test) 1070 load

{block 202}
( ga application tools)
: a-com [ 10 ] ; | *
: a-bps 921600 ;
: c-com [ 3 ] ; | *
: c-bps 921600 ;
: host 206 ; | *
: target 208 ; | , 

( modules) | *
: sram [ 264 ] ; | *
: pf [ 360 ] ; | *
: ether [ 720 ] ; | , 

( utils) | *
: streamer [ 282 ] ; | *
: loader [ 210 ] ; | , | ,

: selftest ( port) [ 708 ] load ; :var stp [0x3]
: autotest ( port) [ 712 ] load ;

{block 216}
792 load 1072 load

{block 360}
( polyforth vm) reclaim | ,
( sram) sram load | ,
( serial) 38 fh 3 loads reclaim | ,
( stack) 106 node $39 org 278 load 14 fh 2 loads | ,
( coprocs) 22 fh 4 loads | ,
( bitsy) 105 node 18 fh 2 loads | ,
( coprocs) 30 fh 4 loads | ,
( flash to sram) 86 fh 2 loads reclaim | ,
( erase and burn flash) 288 load | ,
( spi speedup) 290 load | ,
( serial wires) 102 node $20 org | ,
: start @ !b start ; 1709 bin | ,
( ganglia) 44 fh load ( snorkel) 48 fh load | ,
( spi) 50 fh load

{block 362}
( - load descriptors)
: l, dup +node 100 /mod 1 and 2* swap 1 and + 1714 + 
  push 32 32 pop /part ( main) $a9 /p ;
: ganglia nns for i -1 + n-nn l, next ; | ,

( sea of mk1) ganglia | ,
( snorkel) 207 +node 1605 /ram up /b $37 /p | ,
( sram) sram 2 + load | ,
( vm) 2 fh load | ,
( serial) 4 fh load | ,
( additional i/o) 6 fh load | ,
( md5) 792 load | ,
( clock nodes) exit | ,
517 +node 517 /ram io /b $200 /p | ,
516 +node 516 /ram left dup /a /p right /b | ,

{block 790}
host target | cr
110 node 808 load
111 node 810 load
112 node 812 load
210 node 816 load
211 node 818 load
209 node 1060 load

{block 792}
: /node dup +node /ram ; | cr
110 /node $0 /p
111 /node $15 /p
112 /node $2 /p
210 /node left /p
211 /node $19 /p
209 /node left /b right /a right /p

{block 808}
( -) # 110 ( id 4 mem 0) 0 org | cr
| br
: main = $0 up b! @b right b! !b main = $0 ; | cr

{block 810}
( -) # 111 ( id 5 mem 2) 0 org | cr
0 , 0 , | br
: 6rep = $0 up b! @b left b! !b = $0 ; | cr
: 5rep = $0 b! - @b . + - dup 325 a! ! = $0 ; | cr
: 1if = $0 | cr
  .. if drop ; ] then a! 325 b! dup !b = $0 ; | cr
: 2if = $0 | cr
  .. -if drop ; ] then dup or a! @+ a 5rep 1if = $0 ; | cr
: main = $0 469 a! 0 dup b! @ !b | cr
  15 for | cr
    6rep 6rep 1 b! a! 373 a! @ !b @ 1 b! @b 2* 2* over 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 3 and . + 1 b! !b 65535 and 1 a! @ dup dup or 5rep 2if next main = $0 ; | cr

{block 812}
( -) # 112 ( id 6 mem 2) 0 org | cr
0 , 0 , | br
: main = $0 | cr
  15 for | cr
    373 b! @b 0 @b a! 17 | cr
    for | cr
      +* unext 373 b! !b 1 b! drop a dup !b left b! !b next main = $0 ; | cr

{block 816}
( -) # 210 ( id 8 mem 0) 0 org | cr
0 , $10000 , $8000 , $4000 , $2000 , $1000 , $800 , $400 , 
$2629 , $446 , $7006 , $5475 , $5272 , $4639 , $986 , $4871 , | cr
: /start = $0 
  dup dup or a!
  7 for 
  @+ up b! !b @+ 469 b! !b @b next left b! !b = $0 ; | cr

{block 818}
( -) # 211 ( id 9 mem 3) 0 org | cr
0 , 0 , 0 , | br
: 1if = $0 | cr
  .. -if drop ; ] then 1 b! drop dup !b = $0 ; | cr
: 2if = $0 | cr
  .. if drop ; ] then drop 0 b! @b up b! @b - 1 . + . + 1if = $0 ; | cr
: 3if = $0 | cr
  .. -if 1 b! drop dup !b ; ] then drop up b! @b 2if = $0 ; | cr
: main = $0 1 a! 0 469 b! dup !+ 32768 ! @b 0 b! !b | cr
  15 for | cr
    1 b! @b 2 b! @b over - and . + push drop pop 325 b! dup dup !b !b @b 3if 2 a! @ 2/ ! next 1 b! @b right b! !b main = $0 ; | cr

{block 1060}
( snorkel interface 209 )
0 org | cr
: start 1 for @p !b [ .. /start .. ] @b next ! ;

{block 1070}
( softsim  ) 208 node 0 org | cr
: main = $0 right b! @p [ .. start .. ] !b @b warm = $0 ;

{block 1072}
( softsim test config) | cr
208 +node 208 /ram $0 /p
