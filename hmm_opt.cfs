{block 200}
( user f18 code) reclaim 790 load | br

{block 202}
( ga application tools)
: a-com [ 10 ] ; | *
: a-bps 921600 ;
: c-com [ 3 ] ; | *
: c-bps 921600 ;
: host 206 ; | *
: target 208 ; | , 

( modules) | *
: sram [ 264 ] ; | *
: pf [ 360 ] ; | *
: ether [ 720 ] ; | , 

( utils) | *
: streamer [ 282 ] ; | *
: loader [ 210 ] ; | , | ,

: selftest ( port) [ 708 ] load ; :var stp [0x3]
: autotest ( port) [ 712 ] load ;

{block 216}
792 load

{block 360}
( polyforth vm) reclaim | ,
( sram) sram load | ,
( serial) 38 fh 3 loads reclaim | ,
( stack) 106 node $39 org 278 load 14 fh 2 loads | ,
( coprocs) 22 fh 4 loads | ,
( bitsy) 105 node 18 fh 2 loads | ,
( coprocs) 30 fh 4 loads | ,
( flash to sram) 86 fh 2 loads reclaim | ,
( erase and burn flash) 288 load | ,
( spi speedup) 290 load | ,
( serial wires) 102 node $20 org | ,
: start @ !b start ; 1709 bin | ,
( ganglia) 44 fh load ( snorkel) 48 fh load | ,
( spi) 50 fh load

{block 362}
( - load descriptors)
: l, dup +node 100 /mod 1 and 2* swap 1 and + 1714 + 
  push 32 32 pop /part ( main) $a9 /p ;
: ganglia nns for i -1 + n-nn l, next ; | ,

( sea of mk1) ganglia | ,
( snorkel) 207 +node 1605 /ram up /b $37 /p | ,
( sram) sram 2 + load | ,
( vm) 2 fh load | ,
( serial) 4 fh load | ,
( additional i/o) 6 fh load | ,
( md5) 792 load | ,
( clock nodes) exit | ,
517 +node 517 /ram io /b $200 /p | ,
516 +node 516 /ram left dup /a /p right /b | ,

{block 1388}
( routing; called with 'a relay')
: relay ( a) pop a! @+ push @+ .. zif | indent
     drop ahead ( done) [ swap ] then | indent
     pop over push @p+ ( ') a relay ( ') | indent
     !b !b !b begin @+ !b unext
: done then a push a! ;

{block 790}
host target | cr
509 node 998 load
508 node 996 load
507 node 994 load
506 node 992 load
505 node 990 load
504 node 988 load
503 node 986 load
502 node 984 load
501 node 982 load
405 node 954 load
404 node 952 load
403 node 950 load
402 node 948 load
401 node 946 load
305 node 918 load
304 node 916 load
303 node 914 load
302 node 912 load
301 node 910 load
206 node 884 load
205 node 882 load
203 node 878 load
202 node 876 load
201 node 874 load
200 node 872 load
105 node 846 load
104 node 844 load
102 node 840 load
100 node 836 load
101 node 838 load
0 node 800 load
1 node 802 load
2 node 804 load
3 node 806 load
103 node 842 load
204 node 880 load
605 node 1000 load

{block 792}
: /node dup +node /ram ; | cr
0 /node right /p right /a 
1 /node left /p right /a 
2 /node right /p left /a 
3 /node down /p down /a 
100 /node right /p right /a 
101 /node $33 /p 
102 /node $2c /p 
103 /node up /p 
104 /node $12 /p 
105 /node $26 /p 
200 /node up /p up /a 
201 /node $29 /p 
202 /node $2e /p 
203 /node $1 /p left /a 
204 /node $f /p left /a 
205 /node right /p down /a 
206 /node $26 /p 
301 /node $6 /p down /a 
302 /node $b /p down /a 
303 /node $0 /p right /a 
304 /node $4 /p up /a 
305 /node $29 /p 
401 /node $0 /p up /a 
402 /node $7 /p up /a 
403 /node $0 /p left /a 
404 /node $8 /p down /a 
405 /node $a /p down /a 
501 /node $0 /p down /a 
502 /node $9 /p down /a 
503 /node $7 /p right /a 
504 /node $1a /p right /a 
505 /node $24 /p down /a 
506 /node $25 /p right /a 
507 /node $6 /p right /a 
508 /node $23 /p right /a 
509 /node $23 /p right /a 
605 /node $15 /p

{block 998}
( -) # 509 ( id 99 mem 3) 0 org | cr
0 , 0 , 0 , | br
: 32rep = $0 push - pop . + - dup ! = $0 ; | cr
: 31rep = $0 drop @b 205 . + @ 32rep drop = $0 ; | cr
: 30rep = $0 31rep @ = $0 ; | cr
: 29rep = $0 b! 261939 @b . + 32rep = $0 ; | cr
: 1if = $0 | cr
  .. if drop @ dup dup or 29rep 30rep 1 29rep 30rep 2 29rep 31rep ; ] then drop = $0 ; | cr
: 2if = $0 | cr
  .. if dup or b! 1 @ !b b! @ !b @ 2 b! !b ; ] then drop = $0 ; | cr
: main = $0 @ 1if @ 2if main = $0 ; | cr

{block 996}
( -) # 508 ( id 98 mem 3) 0 org | cr
0 , 0 , 0 , | br
: 28rep = $0 | cr
  .. -if . + drop 1 ; ] then drop = $0 ; | cr
: 7if = $0 | cr
  .. if dup or b! dup or @b ! @ 28rep @b ! @ 28rep 1 b! @b ! @ 28rep @b ! @ 28rep 2 b! @b ! @ 28rep @b ! @ 28rep ; ] then drop = $0 ; | cr
: 8if = $0 | cr
  .. if dup or b! 1 @b ! b! @b ! 2 b! @b ! ; ] then drop = $0 ; | cr
: main = $0 a 373 b! 0 a! @b !+ @b !+ a! a 2 a! 373 b! @b !+ a! @b dup dup ! 7if dup dup ! 8if 373 b! !b main = $0 ; | cr

{block 994}
( -) # 507 ( id 97 mem 1) 0 org | cr
0 , | br
: 27rep = $0 | cr
  .. -if . + drop 1 ; ] then drop = $0 ; | cr
: main = $0 0 dup b! 563 @ !b - @b . + - 27rep 261683 @b . + 27rep @ 373 b! !b @ !b @ !b !b @b ! main = $0 ; | cr

{block 992}
( -) # 506 ( id 96 mem 2) 0 org | cr
0 , 0 , | br
: 26rep = $0 | cr
  for | cr
    +* unext = $0 ; | cr
: 25rep = $0 
  .. -if - 1 . + then a over a! dup over push or 17 26rep push dup or pop 8 26rep drop drop a pop a! = $0 ; | cr
: filter = $0 a push dup dup or a! !+ push !+ pop pop a! 1 b! @b 25rep over 25rep . + dup dup or b! @b 25rep . + ! 1 b! 0 @b ! b! dup ! @b ! @ left b! !b drop = $0 ; | cr
: main = $0 left b! @b @b @b filter main = $0 ; | cr

{block 1000}
( -) # 605 0 org | cr
262139 , 56 , 568 , 0 , 36 , 512 , 20 , 261898 , 553 , 262052 , 46 , 568 , 
0 , 261955 , 538 , 262118 , 261960 , 517 , 46 , 123 , 563 ,
| br
: main = $0 up b! dup or a! 20 for @+ !b next warm = $0 

{block 990}
( -) # 505 ( id 95 mem 6) 0 org | cr
0 , 0 , 0 , 0 , 0 , 0 , | br
: 1while = $0 dup !b @b | cr
  .. -if drop 2* 1while ; ] then drop = $0 ; | cr
: pout = $0 @ = $0 ; | cr
: input = $0 a push 0 a! !+ ! dup pop a! ! 1 b! @b ! dup or b! @b ! 469 b! @b = $0 ; | cr
: 2if = $0 | cr
  .. if 2 b! or dup or dup @b 3 b! @b 4 b! @b input over - and . + push drop pop 1while ; ] then drop = $0 ; | cr
: filter = $0 @b = $0 ; | cr
: main = $0 
a push | cr
up b! 2 a! @b !+ @b !+ @b !+  | cr
left b! 2 a! @+ !b @+ !b @+ !b  | cr
pop a! | cr
filter dup right b! !b dup ! 2if pout 5 b! !b main = $0 ; | cr

{block 988}
( -) # 504 ( id 94 mem 0) 0 org | cr
| br
: 1while = $0 1 @ - . + dup ! | cr
  .. -if drop 1 . + 1while ; ] then drop = $0 ; | cr
: 2if = $0 | cr
  .. -if over 262141 . + !b b! ; ] then drop = $0 ; | cr
: input = $0 down b! @b ! = $0 ; | cr
: 3if = $0 | cr
  .. if drop input dup or 1while dup 262140 . + - 373 b! dup !b 2if ; ] then drop = $0 ; | cr
: main = $0 277 b! dup dup or @ 373 over !b b! dup !b 3if main = $0 ; | cr

{block 986}
( -) # 503 ( id 93 mem 0) 0 org | cr
| br
: 1if = $0 | cr
  .. -if drop @b ! ; ] then drop = $0 ; | cr
: 2if = $0 | cr
  .. if drop @b dup ! 1if ; ] then drop = $0 ; | cr
: main = $0 left b! @b dup ! 2if main = $0 ; | cr

{block 984}
( -) # 502 ( id 92 mem 0) 0 org | cr
| br
: 1if = $0 | cr
  .. -if drop @b ! ; ] then drop = $0 ; | cr
: 2if = $0 | cr
  .. if drop right b! @b dup ! 1if ; ] then drop = $0 ; | cr
: main = $0 469 b! @b 373 b! dup ! dup !b 2if main = $0 ; | cr

{block 982}
( -) # 501 ( id 91 mem 0) 0 org | cr
| br
: main = $0 373 b! @b ! main = $0 ; | cr

{block 954}
( -) # 405 ( id 77 mem 0) 0 org | cr
| br
: pout = $0 right b! @b ! = $0 ; | cr
: input = $0 @ up b! !b @ !b @ !b = $0 ; | cr
: 1if = $0 | cr
  .. if drop input ; ] then drop = $0 ; | cr
: main = $0 @ 1if pout main = $0 ; | cr

{block 952}
( -) # 404 ( id 76 mem 0) 0 org | cr
| br
: pout = $0 left b! @b right b! !b = $0 ; | cr
: input = $0 @b ! = $0 ; | cr
: 1if = $0 | cr
  .. if drop input ; ] then drop = $0 ; | cr
: main = $0 325 b! @ dup !b 1if pout main = $0 ; | cr

{block 950}
( -) # 403 ( id 75 mem 0) 0 org | cr
| br
: main = $0 up b! @b ! main = $0 ; | cr

{block 948}
( -) # 402 ( id 74 mem 0) 0 org | cr
| br
: 1if = $0 | cr
  .. -if drop @b ! ; ] then drop = $0 ; | cr
: 2if = $0 | cr
  .. if drop @b dup ! 1if ; ] then drop = $0 ; | cr
: main = $0 down b! @b dup ! 2if main = $0 ; | cr

{block 946}
( -) # 401 ( id 73 mem 0) 0 org | cr
| br
: main = $0 277 b! @b ! main = $0 ; | cr

{block 918}
( -) # 305 ( id 59 mem 2) 0 org | cr
312 , 228 , 262141 , 261875 , 261832 , 261924 , 0 , 220 , 0 , 31 , 262142 , 0 , 0 , 0 , | br
: 24rep = $0 up b! @b down b! !b = $0 ; | cr
: 23rep = $0 | cr
  for | cr
    +* unext = $0 ; | cr
: group = $0 @b | cr
  dup dup or a! 13 for | cr
    dup @+ - . + - 
    .. -if - 1 . + then a over a! dup over push or 17 23rep push dup or pop 8 23rep drop drop a pop a! !b next drop = $0 ; | cr
: main = $0 24rep 24rep 24rep group main = $0 ; | cr

{block 916}
( -) # 304 ( id 58 mem 0) 0 org | cr
| br
: input = $0 @b ! = $0 ; | cr
: 1if = $0 | cr
  .. if drop input ; ] then drop = $0 ; | cr
: main = $0 277 b! @ dup !b 1if main = $0 ; | cr

{block 914}
( -) # 303 ( id 57 mem 0) 0 org | cr
| br
: main = $0 @ up b! !b main = $0 ; | cr

{block 912}
( -) # 302 ( id 56 mem 0) 0 org | cr
| br
: 1if = $0 | cr
  .. -if drop @b ! ; ] then drop = $0 ; | cr
: 2if = $0 | cr
  .. if drop @b dup ! 1if ; ] then drop = $0 ; | cr
: pout = $0 left b! @b right b! !b = $0 ; | cr
: main = $0 up b! @b dup ! 2if pout main = $0 ; | cr

{block 910}
( -) # 301 ( id 55 mem 0) 0 org | cr
| br
: pout = $0 0 | cr
  7 for | cr
    @ . + unext 373 b! !b = $0 ; | cr
: main = $0 325 b! @b ! pout main = $0 ; | cr

{block 884}
( -) # 206 ( id 42 mem 2) 0 org | cr
0 , 262124 , 32 , 22 , 0 , 0 , 0 , 0 , 312 , 299 , 261910 , 261832 , 261924 , 220 , | br
: 22rep = $0 | cr
  for | cr
    +* unext = $0 ; | cr
: group = $0 373 b! @b | cr
  dup dup or a! 13 for | cr
    dup @+ - . + - 
    .. -if - 1 . + then a over a! dup over push or 17 22rep push dup or pop 8 22rep drop drop a pop a! !b next drop = $0 ; | cr
: main = $0 group main = $0 ; | cr

{block 882}
( -) # 205 ( id 41 mem 9) 0 org | cr
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: 1if = $0 | cr
  .. -if drop dup !b 8 b! @b 4 b! !b ; ] then drop = $0 ; | cr
: group = $0 a push 0 a! !+ !+ pop over ! a! ! a 0 a! 373 b! @+ @ 325 a! !b ! a! 130560 3 b! !b dup dup or | cr
  dup dup or 8 b! !b 13 for | cr
    @ left b! @b up b! @b . + . + push drop pop dup 3 b! @b - 1 . + . + 1if 8 b! @b 1 . + !b next 4 b! @b right b! !b drop = $0 ; | cr
: act41 = $0 @ @ @ group = $0 ; | cr

{block 878}
( -) # 203 ( id 39 mem 0) 0 org | cr
| br
: pinc = $0 @b ! = $0 ; | cr
: main = $0 @ up b! !b @ !b pinc main = $0 ; | cr

{block 876}
( -) # 202 ( id 38 mem 2) 0 org | cr
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: 21rep = $0 drop | cr
  dup dup or a! 7 for | cr
    @b !+ unext = $0 ; | cr
: 1if = $0 | cr
  .. -if 21rep ; ] then 21rep = $0 ; | cr
: pinc = $0 up b! @b 1if = $0 ; | cr
: swap = $0 | cr
  dup dup or a! 7 for | cr
    @+ over | cr
    .. if -1 . + | cr
      for | cr
        2* unext dup then drop left b! !b next drop = $0 ; | cr
: 2if = $0 | cr
  .. -if drop down b! @b swap ; ] then dup or swap = $0 ; | cr
: 3if = $0 | cr
  .. if drop pinc down b! @b dup left b! !b 2if ; ] then drop = $0 ; | cr
: main = $0 down b! @b 3if main = $0 ; | cr

{block 874}
( -) # 201 ( id 37 mem 2) 0 org | cr
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: 1if = $0 | cr
  .. -if drop | cr
    7 for | cr
      | cr
      dup dup or a! 7 for | cr
        @+ !b unext next ; ] then drop = $0 ; | cr
: pinc = $0 up b! @b 1if = $0 ; | cr
: pout = $0 | cr
  dup dup or a! 7 for | cr
    @+ down b! !b next = $0 ; | cr
: swap = $0 | cr
  dup dup or a! 7 for | cr
    @b !+ unext = $0 ; | cr
: 2if = $0 | cr
  .. -if drop swap ; ] then drop swap = $0 ; | cr
: 3if = $0 | cr
  .. if drop pinc left b! @b 2if ; ] then drop = $0 ; | cr
: main = $0 down b! @b 3if pout main = $0 ; | cr

{block 872}
( -) # 200 ( id 36 mem 2) 0 org | cr
0 , 0 , 0 , 43691 , 43691 , 43691 , 0 , 0 , 0 , 0 , 0 , 0 , 43691 , 43691 , 43691 , 0 , 0 , 0 , 0 , 0 , 0 , 43691 , 43691 , 43691 , 0 , 0 , 0 , 0 , 0 , 0 , 65536 , 65536 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 131071 , | br
: geta2 = $0 262120 . + b! @b ! = $0 ; | cr
: act36 = $0 @ geta2 = $0 ; | cr

{block 846}
( -) # 105 ( id 23 mem 2) 0 org | cr
0 , 546 , 560 , 537 , 0 , 261924 , 261832 , 261924 , 0 , 543 , 543 , 0 , 261924 , 261924 , | br
: 20rep = $0 | cr
  for | cr
    +* unext = $0 ; | cr
: group = $0 325 b! @b | cr
  dup dup or a! 13 for | cr
    dup @+ - . + - 
    .. -if - 1 . + then a over a! dup over push or 17 20rep push dup or pop 8 20rep drop drop a pop a! !b next drop = $0 ; | cr
: main = $0 group main = $0 ; | cr

{block 844}
( -) # 104 ( id 22 mem 2) 0 org | cr
131071 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: 1if = $0 | cr
  .. -if drop ; ] then drop | cr
    dup dup or a! 7 for | cr
      @+ !b unext = $0 ; | cr
: pinc = $0 left b! @b 1if = $0 ; | cr
: main = $0 pinc main = $0 ; | cr

{block 840}
( -) # 102 ( id 20 mem 3) 0 org | cr
0 , 0 , 0 , | br
: 1if = $0 | cr
  .. -if drop | cr
    7 for | cr
      left b! @b right b! @b a push *.17 1 b! !b +* pop a! @b 325 b! !b drop dup 1 b! @b over - and . + push drop pop next ; ] then dup or b! 262143 !b | cr
    7 for | cr
      right b! @b up b! !b next b! 131072 = $0 ; | cr
: pinc = $0 0 dup b! @b dup up b! !b dup right b! !b dup left b! !b 1if 469 b! !b = $0 ; | cr
: main = $0 pinc main = $0 ; | cr

{block 836}
( -) # 100 ( id 18 mem 3) 0 org | cr
43691 , 43691 , 43691 , 0 , 0 , 0 , 0 , 0 , 0 , 43691 , 43691 , 43691 , 0 , 0 , 0 , 0 , 0 , 0 , 43691 , 43691 , 43691 , 0 , 0 , 0 , 0 , | br
: geta2 = $0 @b = $0 ; | cr
: 1if = $0 | cr
  .. -if over b! @b 24 b! !b drop ; ] then drop up b! @p [ .. act36 .. ] !b dup up b! !b geta2 24 b! !b = $0 ; | cr
: geta = $0 262120 over . + 1if 24 b! @b ! drop = $0 ; | cr
: act18 = $0 @ geta = $0 ; | cr

{block 838}
( -) # 101 ( id 19 mem 2) 0 org | cr
0 , 0 , | br
: geta = $0 @b = $0 ; | cr
: 1if = $0 | cr
  .. -if drop | cr
    dup over or dup b! !b 7 for | cr
      dup or | cr
      dup dup or 1 b! !b 7 for | cr
        dup up b! @b right b! @p [ .. act18 .. ] !b 1 b! @b 2* 2* 2* dup dup or b! @b . + 469 b! !b geta a push *.17 over or or . + pop a! over or 1 dup b! @b . + !b or next dup left b! !b 1 dup 2/ b! @b . + !b next ; ] then drop = $0 ; | cr
: pinc = $0 dup dup or left b! @b dup up b! !b 1if drop = $0 ; | cr
: main = $0 pinc main = $0 ; | cr

{block 800}
( -) # 0 ( id 0 mem 2) 0 org | cr
26804 , 24248 , 21861 , 10931 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: getb4 = $0 262060 . + b! @b ! = $0 ; | cr
: act0 = $0 @ getb4 = $0 ; | cr

{block 802}
( -) # 1 ( id 1 mem 3) 0 org | cr
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 34069 , 20407 , 16139 , 8729 , 12240 , 18465 , 26403 , 30709 , 20917 , 53012 , 45529 , 29371 , 0 , | br
: getb4 = $0 @ = $0 ; | cr
: 1if = $0 | cr
  .. -if drop dup -56 . + b! @b 28 b! !b ; ] then drop @p [ .. act0 .. ] ! dup ! getb4 28 b! !b = $0 ; | cr
: getb3 = $0 262060 over . + 1if 28 b! @b left b! !b drop = $0 ; | cr
: act1 = $0 left b! @b getb3 = $0 ; | cr

{block 804}
( -) # 2 ( id 2 mem 3) 0 org | cr
16701 , 15895 , 16455 , 40105 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , | br
: getb3 = $0 @ = $0 ; | cr
: 1if = $0 | cr
  .. -if drop dup -28 . + b! @b 28 b! !b ; ] then drop @p [ .. act1 .. ] ! dup ! getb3 28 b! !b = $0 ; | cr
: getb2 = $0 262088 over . + 1if 28 b! @b right b! !b drop = $0 ; | cr
: act2 = $0 right b! @b getb2 = $0 ; | cr

{block 806}
( -) # 3 ( id 3 mem 3) 0 org | cr
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1161 , 8306 , 13214 , 24976 , 28879 , 31077 , 27488 , 19147 , 73452 , 41191 , 45202 , 51224 , 46448 , 41388 , 38865 , 30180 , 1474 , 8156 , 10988 , 16771 , 0 , | br
: getb2 = $0 @b = $0 ; | cr
: 1if = $0 | cr
  .. -if over b! @b 28 b! !b drop ; ] then drop right b! @p [ .. act2 .. ] !b dup right b! !b getb2 28 b! !b = $0 ; | cr
: getb = $0 262116 over . + 1if 28 b! @b ! drop = $0 ; | cr
: act3 = $0 @ getb = $0 ; | cr

{block 842}
( -) # 103 ( id 21 mem 1) 0 org | cr
0 , | br
: 19rep = $0 right b! !b 1 dup 2/ b! @b . + !b = $0 ; | cr
: 17rep = $0 down b! @p [ .. act3 .. ] !b = $0 ; | cr
: getb = $0 @b = $0 ; | cr
: 18rep = $0 2* 2* 2* dup dup or b! @b 277 b! . + !b getb = $0 ; | cr
: 1if = $0 | cr
  .. -if drop | cr
    dup dup or dup b! !b 7 for | cr
      17rep dup 18rep 19rep next ; ] then drop | cr
    dup dup or dup b! !b 7 for | cr
      left b! @b 17rep over 18rep a push *.17 push drop pop pop a! 19rep next = $0 ; | cr
: pinc = $0 right b! @b dup left b! !b 1if right b! @b up b! !b drop = $0 ; | cr
: act21 = $0 up b! @b pinc = $0 ; | cr

{block 880}
( -) # 204 ( id 40 mem 0) 0 org | cr
| br
: pinc = $0 @ = $0 ; | cr
: group = $0 right b! @b = $0 ; | cr
: input = $0 @p [ .. act21 .. ] ! right b! @p [ .. act41 .. ] !b group ! pinc down b! !b = $0 ; | cr
: 1if = $0 | cr
  .. if drop input ; ] then drop = $0 ; | cr
: main = $0 down b! @b 1if main = $0 ; | cr

